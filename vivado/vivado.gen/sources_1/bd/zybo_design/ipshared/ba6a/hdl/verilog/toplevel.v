// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="toplevel_toplevel,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=114,HLS_SYN_DSP=0,HLS_SYN_FF=4256,HLS_SYN_LUT=12549,HLS_VERSION=2020_2}" *)

module toplevel (
        ap_clk,
        ap_rst_n,
        m_axi_MAXI_AWVALID,
        m_axi_MAXI_AWREADY,
        m_axi_MAXI_AWADDR,
        m_axi_MAXI_AWID,
        m_axi_MAXI_AWLEN,
        m_axi_MAXI_AWSIZE,
        m_axi_MAXI_AWBURST,
        m_axi_MAXI_AWLOCK,
        m_axi_MAXI_AWCACHE,
        m_axi_MAXI_AWPROT,
        m_axi_MAXI_AWQOS,
        m_axi_MAXI_AWREGION,
        m_axi_MAXI_AWUSER,
        m_axi_MAXI_WVALID,
        m_axi_MAXI_WREADY,
        m_axi_MAXI_WDATA,
        m_axi_MAXI_WSTRB,
        m_axi_MAXI_WLAST,
        m_axi_MAXI_WID,
        m_axi_MAXI_WUSER,
        m_axi_MAXI_ARVALID,
        m_axi_MAXI_ARREADY,
        m_axi_MAXI_ARADDR,
        m_axi_MAXI_ARID,
        m_axi_MAXI_ARLEN,
        m_axi_MAXI_ARSIZE,
        m_axi_MAXI_ARBURST,
        m_axi_MAXI_ARLOCK,
        m_axi_MAXI_ARCACHE,
        m_axi_MAXI_ARPROT,
        m_axi_MAXI_ARQOS,
        m_axi_MAXI_ARREGION,
        m_axi_MAXI_ARUSER,
        m_axi_MAXI_RVALID,
        m_axi_MAXI_RREADY,
        m_axi_MAXI_RDATA,
        m_axi_MAXI_RLAST,
        m_axi_MAXI_RID,
        m_axi_MAXI_RUSER,
        m_axi_MAXI_RRESP,
        m_axi_MAXI_BVALID,
        m_axi_MAXI_BREADY,
        m_axi_MAXI_BRESP,
        m_axi_MAXI_BID,
        m_axi_MAXI_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_state1 = 74'd1;
parameter    ap_ST_fsm_state2 = 74'd2;
parameter    ap_ST_fsm_state3 = 74'd4;
parameter    ap_ST_fsm_state4 = 74'd8;
parameter    ap_ST_fsm_state5 = 74'd16;
parameter    ap_ST_fsm_state6 = 74'd32;
parameter    ap_ST_fsm_state7 = 74'd64;
parameter    ap_ST_fsm_state8 = 74'd128;
parameter    ap_ST_fsm_pp0_stage0 = 74'd256;
parameter    ap_ST_fsm_state12 = 74'd512;
parameter    ap_ST_fsm_state13 = 74'd1024;
parameter    ap_ST_fsm_state14 = 74'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 74'd4096;
parameter    ap_ST_fsm_state17 = 74'd8192;
parameter    ap_ST_fsm_state18 = 74'd16384;
parameter    ap_ST_fsm_state19 = 74'd32768;
parameter    ap_ST_fsm_state20 = 74'd65536;
parameter    ap_ST_fsm_state21 = 74'd131072;
parameter    ap_ST_fsm_state22 = 74'd262144;
parameter    ap_ST_fsm_state23 = 74'd524288;
parameter    ap_ST_fsm_state24 = 74'd1048576;
parameter    ap_ST_fsm_state25 = 74'd2097152;
parameter    ap_ST_fsm_state26 = 74'd4194304;
parameter    ap_ST_fsm_state27 = 74'd8388608;
parameter    ap_ST_fsm_state28 = 74'd16777216;
parameter    ap_ST_fsm_state29 = 74'd33554432;
parameter    ap_ST_fsm_state30 = 74'd67108864;
parameter    ap_ST_fsm_state31 = 74'd134217728;
parameter    ap_ST_fsm_state32 = 74'd268435456;
parameter    ap_ST_fsm_state33 = 74'd536870912;
parameter    ap_ST_fsm_state34 = 74'd1073741824;
parameter    ap_ST_fsm_state35 = 74'd2147483648;
parameter    ap_ST_fsm_state36 = 74'd4294967296;
parameter    ap_ST_fsm_state37 = 74'd8589934592;
parameter    ap_ST_fsm_state38 = 74'd17179869184;
parameter    ap_ST_fsm_state39 = 74'd34359738368;
parameter    ap_ST_fsm_state40 = 74'd68719476736;
parameter    ap_ST_fsm_state41 = 74'd137438953472;
parameter    ap_ST_fsm_state42 = 74'd274877906944;
parameter    ap_ST_fsm_state43 = 74'd549755813888;
parameter    ap_ST_fsm_state44 = 74'd1099511627776;
parameter    ap_ST_fsm_state45 = 74'd2199023255552;
parameter    ap_ST_fsm_state46 = 74'd4398046511104;
parameter    ap_ST_fsm_state47 = 74'd8796093022208;
parameter    ap_ST_fsm_state48 = 74'd17592186044416;
parameter    ap_ST_fsm_state49 = 74'd35184372088832;
parameter    ap_ST_fsm_state50 = 74'd70368744177664;
parameter    ap_ST_fsm_state51 = 74'd140737488355328;
parameter    ap_ST_fsm_state52 = 74'd281474976710656;
parameter    ap_ST_fsm_state53 = 74'd562949953421312;
parameter    ap_ST_fsm_state54 = 74'd1125899906842624;
parameter    ap_ST_fsm_state55 = 74'd2251799813685248;
parameter    ap_ST_fsm_state56 = 74'd4503599627370496;
parameter    ap_ST_fsm_state57 = 74'd9007199254740992;
parameter    ap_ST_fsm_state58 = 74'd18014398509481984;
parameter    ap_ST_fsm_state59 = 74'd36028797018963968;
parameter    ap_ST_fsm_state60 = 74'd72057594037927936;
parameter    ap_ST_fsm_state61 = 74'd144115188075855872;
parameter    ap_ST_fsm_state62 = 74'd288230376151711744;
parameter    ap_ST_fsm_state63 = 74'd576460752303423488;
parameter    ap_ST_fsm_state64 = 74'd1152921504606846976;
parameter    ap_ST_fsm_state65 = 74'd2305843009213693952;
parameter    ap_ST_fsm_state66 = 74'd4611686018427387904;
parameter    ap_ST_fsm_state67 = 74'd9223372036854775808;
parameter    ap_ST_fsm_state68 = 74'd18446744073709551616;
parameter    ap_ST_fsm_state69 = 74'd36893488147419103232;
parameter    ap_ST_fsm_state70 = 74'd73786976294838206464;
parameter    ap_ST_fsm_state71 = 74'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 74'd295147905179352825856;
parameter    ap_ST_fsm_state73 = 74'd590295810358705651712;
parameter    ap_ST_fsm_state74 = 74'd1180591620717411303424;
parameter    ap_ST_fsm_state75 = 74'd2361183241434822606848;
parameter    ap_ST_fsm_state76 = 74'd4722366482869645213696;
parameter    ap_ST_fsm_state77 = 74'd9444732965739290427392;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_M_AXI_MAXI_ID_WIDTH = 1;
parameter    C_M_AXI_MAXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_MAXI_DATA_WIDTH = 32;
parameter    C_M_AXI_MAXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_MAXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_MAXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_MAXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_MAXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_MAXI_USER_VALUE = 0;
parameter    C_M_AXI_MAXI_PROT_VALUE = 0;
parameter    C_M_AXI_MAXI_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_MAXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_MAXI_AWVALID;
input   m_axi_MAXI_AWREADY;
output  [C_M_AXI_MAXI_ADDR_WIDTH - 1:0] m_axi_MAXI_AWADDR;
output  [C_M_AXI_MAXI_ID_WIDTH - 1:0] m_axi_MAXI_AWID;
output  [7:0] m_axi_MAXI_AWLEN;
output  [2:0] m_axi_MAXI_AWSIZE;
output  [1:0] m_axi_MAXI_AWBURST;
output  [1:0] m_axi_MAXI_AWLOCK;
output  [3:0] m_axi_MAXI_AWCACHE;
output  [2:0] m_axi_MAXI_AWPROT;
output  [3:0] m_axi_MAXI_AWQOS;
output  [3:0] m_axi_MAXI_AWREGION;
output  [C_M_AXI_MAXI_AWUSER_WIDTH - 1:0] m_axi_MAXI_AWUSER;
output   m_axi_MAXI_WVALID;
input   m_axi_MAXI_WREADY;
output  [C_M_AXI_MAXI_DATA_WIDTH - 1:0] m_axi_MAXI_WDATA;
output  [C_M_AXI_MAXI_WSTRB_WIDTH - 1:0] m_axi_MAXI_WSTRB;
output   m_axi_MAXI_WLAST;
output  [C_M_AXI_MAXI_ID_WIDTH - 1:0] m_axi_MAXI_WID;
output  [C_M_AXI_MAXI_WUSER_WIDTH - 1:0] m_axi_MAXI_WUSER;
output   m_axi_MAXI_ARVALID;
input   m_axi_MAXI_ARREADY;
output  [C_M_AXI_MAXI_ADDR_WIDTH - 1:0] m_axi_MAXI_ARADDR;
output  [C_M_AXI_MAXI_ID_WIDTH - 1:0] m_axi_MAXI_ARID;
output  [7:0] m_axi_MAXI_ARLEN;
output  [2:0] m_axi_MAXI_ARSIZE;
output  [1:0] m_axi_MAXI_ARBURST;
output  [1:0] m_axi_MAXI_ARLOCK;
output  [3:0] m_axi_MAXI_ARCACHE;
output  [2:0] m_axi_MAXI_ARPROT;
output  [3:0] m_axi_MAXI_ARQOS;
output  [3:0] m_axi_MAXI_ARREGION;
output  [C_M_AXI_MAXI_ARUSER_WIDTH - 1:0] m_axi_MAXI_ARUSER;
input   m_axi_MAXI_RVALID;
output   m_axi_MAXI_RREADY;
input  [C_M_AXI_MAXI_DATA_WIDTH - 1:0] m_axi_MAXI_RDATA;
input   m_axi_MAXI_RLAST;
input  [C_M_AXI_MAXI_ID_WIDTH - 1:0] m_axi_MAXI_RID;
input  [C_M_AXI_MAXI_RUSER_WIDTH - 1:0] m_axi_MAXI_RUSER;
input  [1:0] m_axi_MAXI_RRESP;
input   m_axi_MAXI_BVALID;
output   m_axi_MAXI_BREADY;
input  [1:0] m_axi_MAXI_BRESP;
input  [C_M_AXI_MAXI_ID_WIDTH - 1:0] m_axi_MAXI_BID;
input  [C_M_AXI_MAXI_BUSER_WIDTH - 1:0] m_axi_MAXI_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [73:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] ram;
reg    code_ap_vld;
reg   [31:0] error_flag;
reg   [15:0] open_set_size;
reg   [12:0] local_ram_address0;
reg    local_ram_ce0;
reg    local_ram_we0;
wire   [31:0] local_ram_q0;
reg   [15:0] waypoint_count;
reg   [3:0] waypoints_x_V_address0;
reg    waypoints_x_V_ce0;
reg    waypoints_x_V_we0;
wire   [8:0] waypoints_x_V_d0;
wire   [8:0] waypoints_x_V_q0;
wire   [3:0] waypoints_x_V_address1;
reg    waypoints_x_V_ce1;
wire   [8:0] waypoints_x_V_q1;
reg   [3:0] waypoints_y_V_address0;
reg    waypoints_y_V_ce0;
reg    waypoints_y_V_we0;
wire   [8:0] waypoints_y_V_d0;
wire   [8:0] waypoints_y_V_q0;
wire   [3:0] waypoints_y_V_address1;
reg    waypoints_y_V_ce1;
wire   [8:0] waypoints_y_V_q1;
reg   [12:0] closed_set_address0;
reg    closed_set_ce0;
reg    closed_set_we0;
reg   [31:0] closed_set_d0;
wire   [31:0] closed_set_q0;
reg   [14:0] open_set_heap_f_score_V_address0;
reg    open_set_heap_f_score_V_ce0;
reg    open_set_heap_f_score_V_we0;
reg   [10:0] open_set_heap_f_score_V_d0;
wire   [10:0] open_set_heap_f_score_V_q0;
reg    open_set_heap_f_score_V_ce1;
reg    open_set_heap_f_score_V_we1;
wire   [10:0] open_set_heap_f_score_V_q1;
reg   [14:0] open_set_heap_g_score_V_address0;
reg    open_set_heap_g_score_V_ce0;
reg    open_set_heap_g_score_V_we0;
reg   [10:0] open_set_heap_g_score_V_d0;
wire   [10:0] open_set_heap_g_score_V_q0;
reg    open_set_heap_g_score_V_ce1;
reg    open_set_heap_g_score_V_we1;
wire   [10:0] open_set_heap_g_score_V_q1;
reg   [14:0] open_set_heap_x_V_address0;
reg    open_set_heap_x_V_ce0;
reg    open_set_heap_x_V_we0;
reg   [8:0] open_set_heap_x_V_d0;
wire   [8:0] open_set_heap_x_V_q0;
reg    open_set_heap_x_V_ce1;
reg    open_set_heap_x_V_we1;
wire   [8:0] open_set_heap_x_V_q1;
reg   [14:0] open_set_heap_y_V_address0;
reg    open_set_heap_y_V_ce0;
reg    open_set_heap_y_V_we0;
reg   [8:0] open_set_heap_y_V_d0;
wire   [8:0] open_set_heap_y_V_q0;
reg    open_set_heap_y_V_ce1;
reg    open_set_heap_y_V_we1;
wire   [8:0] open_set_heap_y_V_q1;
reg    MAXI_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    MAXI_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln366_reg_1793;
reg    MAXI_blk_n_AW;
wire    ap_CS_fsm_state71;
reg    MAXI_blk_n_W;
wire    ap_CS_fsm_state72;
reg    MAXI_blk_n_B;
wire    ap_CS_fsm_state77;
reg    MAXI_AWVALID;
wire    MAXI_AWREADY;
reg    MAXI_WVALID;
wire    MAXI_WREADY;
wire   [31:0] MAXI_WDATA;
reg    MAXI_ARVALID;
wire    MAXI_ARREADY;
wire    MAXI_RVALID;
reg    MAXI_RREADY;
wire   [31:0] MAXI_RDATA;
wire    MAXI_RLAST;
wire   [0:0] MAXI_RID;
wire   [0:0] MAXI_RUSER;
wire   [1:0] MAXI_RRESP;
wire    MAXI_BVALID;
reg    MAXI_BREADY;
wire   [1:0] MAXI_BRESP;
wire   [0:0] MAXI_BID;
wire   [0:0] MAXI_BUSER;
reg   [12:0] i_reg_408;
reg   [12:0] i_reg_408_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] i_2_reg_420;
reg   [63:0] MAXI_addr_reg_1781;
wire   [12:0] i_1_fu_675_p2;
reg   [12:0] i_1_reg_1788;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln366_fu_681_p2;
reg   [0:0] icmp_ln366_reg_1793_pp0_iter1_reg;
reg   [31:0] MAXI_addr_read_reg_1797;
reg   [31:0] local_ram_load_reg_1802;
wire    ap_CS_fsm_state13;
reg   [15:0] op2_assign_reg_1807;
wire   [15:0] trunc_ln371_fu_702_p1;
reg   [15:0] trunc_ln371_reg_1814;
wire   [0:0] or_ln373_1_fu_743_p2;
reg   [0:0] or_ln373_1_reg_1820;
wire    ap_CS_fsm_state14;
wire   [7:0] i_3_fu_749_p2;
reg   [7:0] i_3_reg_1824;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln379_fu_759_p2;
reg   [0:0] icmp_ln379_reg_1829;
reg   [8:0] trunc_ln3_reg_1838;
wire    ap_CS_fsm_state17;
wire   [17:0] zext_ln275_fu_810_p1;
reg   [17:0] zext_ln275_reg_1848;
wire   [18:0] iteration_limit_fu_813_p3;
reg   [18:0] iteration_limit_reg_1857;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln277_fu_820_p2;
reg   [0:0] icmp_ln277_reg_1862;
wire   [0:0] icmp_ln391_fu_843_p2;
reg   [0:0] icmp_ln391_reg_1866;
wire    ap_CS_fsm_state21;
wire   [7:0] i_7_fu_849_p2;
reg   [7:0] i_7_reg_1870;
wire   [8:0] add_ln394_fu_865_p2;
reg   [8:0] add_ln394_reg_1885;
reg   [8:0] start_x_V_reg_1900;
wire    ap_CS_fsm_state22;
reg   [8:0] start_y_V_reg_1907;
reg   [8:0] goal_x_V_reg_1914;
reg   [8:0] goal_y_V_reg_1924;
wire   [12:0] i_6_fu_877_p2;
wire    ap_CS_fsm_state23;
wire   [9:0] zext_ln83_1_fu_901_p1;
reg   [9:0] zext_ln83_1_reg_1942;
wire    ap_CS_fsm_state24;
wire   [9:0] zext_ln83_3_fu_935_p1;
reg   [9:0] zext_ln83_3_reg_1954;
wire   [10:0] h_start_V_fu_962_p2;
reg   [10:0] h_start_V_reg_1966;
wire    ap_CS_fsm_state27;
wire   [0:0] grp_fu_617_p2;
reg   [0:0] icmp_ln266_reg_1976;
wire   [0:0] icmp_ln277_1_fu_968_p2;
reg   [0:0] icmp_ln277_1_reg_1980;
wire    ap_CS_fsm_state28;
wire   [18:0] iteration_1_fu_973_p2;
reg   [18:0] iteration_1_reg_1984;
wire   [0:0] grp_fu_627_p2;
reg   [0:0] icmp_ln280_reg_1989;
reg   [10:0] current_g_score_V_reg_1993;
wire    ap_CS_fsm_state30;
reg   [8:0] current_x_V_reg_1999;
reg   [8:0] current_y_V_reg_2011;
wire   [17:0] zext_ln870_fu_991_p1;
reg   [17:0] zext_ln870_reg_2023;
wire   [0:0] and_ln288_fu_1009_p2;
reg   [0:0] and_ln288_reg_2035;
wire   [17:0] grp_fu_1751_p2;
reg   [17:0] mul_ln67_reg_2039;
wire    ap_CS_fsm_state33;
wire   [4:0] bit_idx_fu_1019_p1;
reg   [4:0] bit_idx_reg_2046;
wire    ap_CS_fsm_state34;
reg   [12:0] closed_set_addr_1_reg_2051;
wire   [0:0] icmp_ln292_fu_1053_p2;
reg   [0:0] icmp_ln292_reg_2056;
wire    ap_CS_fsm_state35;
wire   [31:0] or_ln78_fu_1059_p2;
reg   [31:0] or_ln78_reg_2060;
wire   [0:0] cmp_i_i130_i_fu_1065_p2;
reg   [0:0] cmp_i_i130_i_reg_2065;
wire    ap_CS_fsm_state36;
wire   [0:0] cmp_i_i124_i_fu_1070_p2;
reg   [0:0] cmp_i_i124_i_reg_2069;
wire   [10:0] neighbour_node_g_score_V_fu_1075_p2;
reg   [10:0] neighbour_node_g_score_V_reg_2073;
wire   [8:0] n_y_V_fu_1080_p2;
reg   [8:0] n_y_V_reg_2082;
wire   [0:0] or_ln312_fu_1106_p2;
reg   [0:0] or_ln312_reg_2094;
wire   [4:0] bit_idx_1_fu_1112_p1;
reg   [4:0] bit_idx_1_reg_2098;
wire    ap_CS_fsm_state39;
reg   [12:0] word_idx_1_reg_2103;
wire    ap_CS_fsm_state40;
wire   [31:0] shl_ln317_fu_1137_p2;
reg   [31:0] shl_ln317_reg_2114;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln317_fu_1149_p2;
reg   [0:0] icmp_ln317_reg_2119;
wire   [0:0] icmp_ln322_fu_1164_p2;
reg   [0:0] icmp_ln322_reg_2128;
wire    ap_CS_fsm_state42;
wire   [10:0] neighbour_node_f_score_V_fu_1229_p2;
reg   [10:0] neighbour_node_f_score_V_reg_2132;
wire    ap_CS_fsm_state45;
wire   [8:0] n_y_V_1_fu_1235_p2;
reg   [8:0] n_y_V_1_reg_2145;
wire   [0:0] or_ln312_1_fu_1261_p2;
reg   [0:0] or_ln312_1_reg_2157;
wire   [4:0] bit_idx_2_fu_1267_p1;
reg   [4:0] bit_idx_2_reg_2161;
wire    ap_CS_fsm_state48;
reg   [12:0] word_idx_2_reg_2166;
wire    ap_CS_fsm_state49;
wire   [31:0] shl_ln317_1_fu_1292_p2;
reg   [31:0] shl_ln317_1_reg_2177;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln317_1_fu_1304_p2;
reg   [0:0] icmp_ln317_1_reg_2182;
wire   [0:0] icmp_ln322_1_fu_1319_p2;
reg   [0:0] icmp_ln322_1_reg_2191;
wire    ap_CS_fsm_state51;
wire   [10:0] neighbour_node_f_score_V_1_fu_1384_p2;
reg   [10:0] neighbour_node_f_score_V_1_reg_2195;
wire    ap_CS_fsm_state54;
wire   [8:0] n_x_V_fu_1390_p2;
reg   [8:0] n_x_V_reg_2208;
wire   [0:0] or_ln312_2_fu_1414_p2;
reg   [0:0] or_ln312_2_reg_2217;
wire    ap_CS_fsm_state55;
wire   [4:0] bit_idx_3_fu_1425_p1;
reg   [4:0] bit_idx_3_reg_2221;
wire   [12:0] word_idx_3_fu_1429_p4;
reg   [12:0] word_idx_3_reg_2226;
wire   [31:0] shl_ln317_2_fu_1453_p2;
reg   [31:0] shl_ln317_2_reg_2236;
wire    ap_CS_fsm_state56;
wire   [0:0] icmp_ln317_2_fu_1465_p2;
reg   [0:0] icmp_ln317_2_reg_2241;
wire   [0:0] icmp_ln322_2_fu_1480_p2;
reg   [0:0] icmp_ln322_2_reg_2250;
wire    ap_CS_fsm_state57;
wire   [10:0] neighbour_node_f_score_V_2_fu_1545_p2;
reg   [10:0] neighbour_node_f_score_V_2_reg_2254;
wire    ap_CS_fsm_state60;
wire   [8:0] n_x_V_3_fu_1551_p2;
reg   [8:0] n_x_V_3_reg_2267;
wire   [0:0] or_ln312_3_fu_1577_p2;
reg   [0:0] or_ln312_3_reg_2274;
wire   [4:0] bit_idx_4_fu_1588_p1;
reg   [4:0] bit_idx_4_reg_2278;
reg   [12:0] word_idx_4_reg_2283;
wire    ap_CS_fsm_state61;
wire   [31:0] shl_ln317_3_fu_1615_p2;
reg   [31:0] shl_ln317_3_reg_2294;
wire    ap_CS_fsm_state62;
wire   [0:0] icmp_ln317_3_fu_1627_p2;
reg   [0:0] icmp_ln317_3_reg_2299;
wire   [0:0] icmp_ln322_3_fu_1642_p2;
reg   [0:0] icmp_ln322_3_reg_2308;
wire    ap_CS_fsm_state63;
wire   [10:0] neighbour_node_f_score_V_3_fu_1707_p2;
reg   [10:0] neighbour_node_f_score_V_3_reg_2312;
wire    ap_CS_fsm_state66;
wire   [31:0] select_ln342_fu_1713_p3;
wire    ap_CS_fsm_state67;
reg   [0:0] icmp_ln396_reg_2346;
wire    ap_CS_fsm_state68;
wire   [27:0] total_length_1_fu_1727_p2;
wire   [31:0] grp_fu_1772_p3;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter1;
wire    grp_os_heap_pop_fu_572_ap_start;
wire    grp_os_heap_pop_fu_572_ap_done;
wire    grp_os_heap_pop_fu_572_ap_idle;
wire    grp_os_heap_pop_fu_572_ap_ready;
wire   [15:0] grp_os_heap_pop_fu_572_open_set_size_o;
wire    grp_os_heap_pop_fu_572_open_set_size_o_ap_vld;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_f_score_V_address0;
wire    grp_os_heap_pop_fu_572_open_set_heap_f_score_V_ce0;
wire    grp_os_heap_pop_fu_572_open_set_heap_f_score_V_we0;
wire   [10:0] grp_os_heap_pop_fu_572_open_set_heap_f_score_V_d0;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_f_score_V_address1;
wire    grp_os_heap_pop_fu_572_open_set_heap_f_score_V_ce1;
wire    grp_os_heap_pop_fu_572_open_set_heap_f_score_V_we1;
wire   [10:0] grp_os_heap_pop_fu_572_open_set_heap_f_score_V_d1;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_g_score_V_address0;
wire    grp_os_heap_pop_fu_572_open_set_heap_g_score_V_ce0;
wire    grp_os_heap_pop_fu_572_open_set_heap_g_score_V_we0;
wire   [10:0] grp_os_heap_pop_fu_572_open_set_heap_g_score_V_d0;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_g_score_V_address1;
wire    grp_os_heap_pop_fu_572_open_set_heap_g_score_V_ce1;
wire    grp_os_heap_pop_fu_572_open_set_heap_g_score_V_we1;
wire   [10:0] grp_os_heap_pop_fu_572_open_set_heap_g_score_V_d1;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_x_V_address0;
wire    grp_os_heap_pop_fu_572_open_set_heap_x_V_ce0;
wire    grp_os_heap_pop_fu_572_open_set_heap_x_V_we0;
wire   [8:0] grp_os_heap_pop_fu_572_open_set_heap_x_V_d0;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_x_V_address1;
wire    grp_os_heap_pop_fu_572_open_set_heap_x_V_ce1;
wire    grp_os_heap_pop_fu_572_open_set_heap_x_V_we1;
wire   [8:0] grp_os_heap_pop_fu_572_open_set_heap_x_V_d1;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_y_V_address0;
wire    grp_os_heap_pop_fu_572_open_set_heap_y_V_ce0;
wire    grp_os_heap_pop_fu_572_open_set_heap_y_V_we0;
wire   [8:0] grp_os_heap_pop_fu_572_open_set_heap_y_V_d0;
wire   [14:0] grp_os_heap_pop_fu_572_open_set_heap_y_V_address1;
wire    grp_os_heap_pop_fu_572_open_set_heap_y_V_ce1;
wire    grp_os_heap_pop_fu_572_open_set_heap_y_V_we1;
wire   [8:0] grp_os_heap_pop_fu_572_open_set_heap_y_V_d1;
wire   [10:0] grp_os_heap_pop_fu_572_ap_return_0;
wire   [8:0] grp_os_heap_pop_fu_572_ap_return_1;
wire   [8:0] grp_os_heap_pop_fu_572_ap_return_2;
wire    grp_os_heap_push_fu_586_ap_start;
wire    grp_os_heap_push_fu_586_ap_done;
wire    grp_os_heap_push_fu_586_ap_idle;
wire    grp_os_heap_push_fu_586_ap_ready;
reg   [10:0] grp_os_heap_push_fu_586_node_f_score;
reg   [10:0] grp_os_heap_push_fu_586_node_g_score;
reg   [8:0] grp_os_heap_push_fu_586_node_x;
reg   [8:0] grp_os_heap_push_fu_586_node_y;
wire   [15:0] grp_os_heap_push_fu_586_open_set_size_o;
wire    grp_os_heap_push_fu_586_open_set_size_o_ap_vld;
wire   [14:0] grp_os_heap_push_fu_586_open_set_heap_f_score_V_address0;
wire    grp_os_heap_push_fu_586_open_set_heap_f_score_V_ce0;
wire    grp_os_heap_push_fu_586_open_set_heap_f_score_V_we0;
wire   [10:0] grp_os_heap_push_fu_586_open_set_heap_f_score_V_d0;
wire   [14:0] grp_os_heap_push_fu_586_open_set_heap_g_score_V_address0;
wire    grp_os_heap_push_fu_586_open_set_heap_g_score_V_ce0;
wire    grp_os_heap_push_fu_586_open_set_heap_g_score_V_we0;
wire   [10:0] grp_os_heap_push_fu_586_open_set_heap_g_score_V_d0;
wire   [14:0] grp_os_heap_push_fu_586_open_set_heap_x_V_address0;
wire    grp_os_heap_push_fu_586_open_set_heap_x_V_ce0;
wire    grp_os_heap_push_fu_586_open_set_heap_x_V_we0;
wire   [8:0] grp_os_heap_push_fu_586_open_set_heap_x_V_d0;
wire   [14:0] grp_os_heap_push_fu_586_open_set_heap_y_V_address0;
wire    grp_os_heap_push_fu_586_open_set_heap_y_V_ce0;
wire    grp_os_heap_push_fu_586_open_set_heap_y_V_we0;
wire   [8:0] grp_os_heap_push_fu_586_open_set_heap_y_V_d0;
wire   [31:0] grp_os_heap_push_fu_586_error_flag;
wire    grp_os_heap_push_fu_586_error_flag_ap_vld;
reg   [12:0] ap_phi_mux_i_phi_fu_412_p4;
reg   [7:0] ap_phi_mux_i_2_phi_fu_424_p4;
wire    ap_block_pp1_stage0;
reg   [27:0] total_length_reg_432;
reg   [7:0] i_4_reg_444;
reg   [12:0] i_5_reg_455;
wire   [0:0] icmp_ln257_fu_883_p2;
reg   [18:0] iteration_reg_466;
reg   [31:0] p_ph_reg_477;
reg   [27:0] add42507_ph_reg_491;
reg   [31:0] p_ph49_reg_502;
reg   [31:0] empty_30_reg_512;
reg   [27:0] add42507_reg_526;
reg   [27:0] storemerge12_reg_541;
reg   [31:0] storemerge_reg_556;
reg    grp_os_heap_pop_fu_572_ap_start_reg;
wire    ap_CS_fsm_state29;
reg    grp_os_heap_push_fu_586_ap_start_reg;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state65;
wire   [63:0] zext_ln367_fu_687_p1;
wire   [63:0] zext_ln380_fu_774_p1;
wire   [63:0] zext_ln381_fu_790_p1;
wire   [63:0] zext_ln394_fu_859_p1;
wire   [63:0] zext_ln394_1_fu_871_p1;
wire   [63:0] zext_ln258_fu_889_p1;
wire   [63:0] zext_ln70_fu_1033_p1;
wire   [63:0] zext_ln62_fu_1129_p1;
wire   [63:0] zext_ln70_1_fu_1155_p1;
wire   [63:0] zext_ln62_1_fu_1284_p1;
wire   [63:0] zext_ln70_2_fu_1310_p1;
wire   [63:0] zext_ln62_2_fu_1445_p1;
wire   [63:0] zext_ln70_3_fu_1471_p1;
wire   [63:0] zext_ln62_3_fu_1607_p1;
wire   [63:0] zext_ln70_4_fu_1633_p1;
wire  signed [63:0] sext_ln366_fu_665_p1;
wire    ap_CS_fsm_state12;
wire   [61:0] trunc_ln_fu_655_p4;
wire   [16:0] zext_ln373_fu_722_p1;
wire   [16:0] add_ln373_fu_725_p2;
wire   [0:0] icmp_ln373_1_fu_717_p2;
wire   [0:0] icmp_ln373_2_fu_731_p2;
wire   [0:0] or_ln373_fu_737_p2;
wire   [0:0] icmp_ln373_fu_712_p2;
wire   [15:0] zext_ln379_1_fu_755_p1;
wire   [8:0] zext_ln379_fu_764_p1;
wire   [8:0] add_ln380_fu_768_p2;
wire   [17:0] grp_fu_1743_p2;
wire   [16:0] zext_ln391_2_fu_833_p1;
wire   [16:0] zext_ln391_1_fu_825_p1;
wire   [16:0] add_ln391_fu_837_p2;
wire   [8:0] zext_ln391_fu_855_p1;
wire   [9:0] zext_ln83_fu_898_p1;
wire   [0:0] icmp_ln83_fu_894_p2;
wire   [9:0] sub_ln83_fu_904_p2;
wire   [9:0] sub_ln83_1_fu_910_p2;
wire   [9:0] select_ln83_fu_916_p3;
wire   [9:0] zext_ln83_2_fu_932_p1;
wire   [0:0] icmp_ln83_1_fu_928_p2;
wire   [9:0] sub_ln83_2_fu_938_p2;
wire   [9:0] sub_ln83_3_fu_944_p2;
wire   [9:0] select_ln83_1_fu_950_p3;
wire  signed [10:0] sext_ln300_fu_958_p1;
wire  signed [10:0] sext_ln83_fu_924_p1;
wire   [0:0] icmp_ln870_fu_995_p2;
wire   [0:0] icmp_ln870_1_fu_1004_p2;
(* use_dsp48 = "no" *) wire   [17:0] idx_fu_1015_p2;
wire   [12:0] word_idx_fu_1023_p4;
wire   [31:0] zext_ln69_fu_1038_p1;
wire   [31:0] shl_ln292_fu_1041_p2;
wire   [31:0] and_ln292_fu_1047_p2;
wire   [0:0] grp_fu_633_p2;
wire   [0:0] icmp_ln882_1_fu_1095_p2;
wire   [0:0] xor_ln882_fu_1085_p2;
wire   [0:0] xor_ln882_1_fu_1100_p2;
wire   [17:0] grp_fu_1756_p3;
wire   [12:0] add_ln62_fu_1124_p2;
wire   [31:0] zext_ln61_fu_1134_p1;
wire   [31:0] and_ln317_fu_1143_p2;
wire   [31:0] and_ln322_fu_1159_p2;
wire   [9:0] zext_ln83_4_fu_1170_p1;
wire   [0:0] grp_fu_637_p2;
wire   [9:0] sub_ln83_4_fu_1173_p2;
wire   [9:0] sub_ln83_5_fu_1178_p2;
wire   [9:0] select_ln83_2_fu_1183_p3;
wire   [9:0] zext_ln83_5_fu_1199_p1;
wire   [0:0] icmp_ln83_3_fu_1195_p2;
wire   [9:0] sub_ln83_6_fu_1202_p2;
wire   [9:0] sub_ln83_7_fu_1207_p2;
wire   [9:0] select_ln83_3_fu_1212_p3;
wire  signed [10:0] sext_ln83_1_fu_1191_p1;
wire   [10:0] add_ln300_fu_1224_p2;
wire  signed [10:0] sext_ln300_1_fu_1220_p1;
wire   [0:0] icmp_ln882_3_fu_1250_p2;
wire   [0:0] xor_ln882_2_fu_1240_p2;
wire   [0:0] xor_ln882_3_fu_1255_p2;
wire   [17:0] grp_fu_1764_p3;
wire   [12:0] add_ln62_1_fu_1279_p2;
wire   [31:0] zext_ln61_1_fu_1289_p1;
wire   [31:0] and_ln317_1_fu_1298_p2;
wire   [31:0] and_ln322_1_fu_1314_p2;
wire   [9:0] zext_ln83_6_fu_1325_p1;
wire   [9:0] sub_ln83_8_fu_1328_p2;
wire   [9:0] sub_ln83_9_fu_1333_p2;
wire   [9:0] select_ln83_4_fu_1338_p3;
wire   [9:0] zext_ln83_7_fu_1354_p1;
wire   [0:0] icmp_ln83_5_fu_1350_p2;
wire   [9:0] sub_ln83_10_fu_1357_p2;
wire   [9:0] sub_ln83_11_fu_1362_p2;
wire   [9:0] select_ln83_5_fu_1367_p3;
wire  signed [10:0] sext_ln83_2_fu_1346_p1;
wire   [10:0] add_ln300_2_fu_1379_p2;
wire  signed [10:0] sext_ln300_2_fu_1375_p1;
wire   [0:0] icmp_ln882_4_fu_1398_p2;
wire   [0:0] grp_fu_641_p2;
wire   [0:0] xor_ln882_4_fu_1402_p2;
wire   [0:0] xor_ln882_5_fu_1408_p2;
wire   [17:0] zext_ln882_2_fu_1395_p1;
(* use_dsp48 = "no" *) wire   [17:0] idx_3_fu_1420_p2;
wire   [12:0] add_ln62_2_fu_1439_p2;
wire   [31:0] zext_ln61_2_fu_1450_p1;
wire   [31:0] and_ln317_2_fu_1459_p2;
wire   [31:0] and_ln322_2_fu_1475_p2;
wire   [9:0] zext_ln83_8_fu_1490_p1;
wire   [0:0] icmp_ln83_6_fu_1486_p2;
wire   [9:0] sub_ln83_12_fu_1493_p2;
wire   [9:0] sub_ln83_13_fu_1498_p2;
wire   [9:0] select_ln83_6_fu_1503_p3;
wire   [9:0] zext_ln83_9_fu_1515_p1;
wire   [0:0] grp_fu_645_p2;
wire   [9:0] sub_ln83_14_fu_1518_p2;
wire   [9:0] sub_ln83_15_fu_1523_p2;
wire   [9:0] select_ln83_7_fu_1528_p3;
wire  signed [10:0] sext_ln300_3_fu_1536_p1;
wire   [10:0] add_ln300_4_fu_1540_p2;
wire  signed [10:0] sext_ln83_3_fu_1511_p1;
wire   [0:0] icmp_ln882_6_fu_1560_p2;
wire   [0:0] xor_ln882_6_fu_1565_p2;
wire   [0:0] xor_ln882_7_fu_1571_p2;
wire   [17:0] zext_ln882_3_fu_1556_p1;
(* use_dsp48 = "no" *) wire   [17:0] idx_4_fu_1583_p2;
wire   [12:0] add_ln62_3_fu_1602_p2;
wire   [31:0] zext_ln61_3_fu_1612_p1;
wire   [31:0] and_ln317_3_fu_1621_p2;
wire   [31:0] and_ln322_3_fu_1637_p2;
wire   [9:0] zext_ln83_10_fu_1652_p1;
wire   [0:0] icmp_ln83_8_fu_1648_p2;
wire   [9:0] sub_ln83_16_fu_1655_p2;
wire   [9:0] sub_ln83_17_fu_1660_p2;
wire   [9:0] select_ln83_8_fu_1665_p3;
wire   [9:0] zext_ln83_11_fu_1677_p1;
wire   [9:0] sub_ln83_18_fu_1680_p2;
wire   [9:0] sub_ln83_19_fu_1685_p2;
wire   [9:0] select_ln83_9_fu_1690_p3;
wire  signed [10:0] sext_ln300_4_fu_1698_p1;
wire   [10:0] add_ln300_6_fu_1702_p2;
wire  signed [10:0] sext_ln83_4_fu_1673_p1;
wire   [27:0] zext_ln396_fu_1724_p1;
wire   [15:0] grp_fu_1743_p0;
wire   [15:0] grp_fu_1743_p1;
wire   [15:0] grp_fu_1751_p0;
wire   [8:0] grp_fu_1751_p1;
wire   [15:0] grp_fu_1756_p0;
wire   [8:0] grp_fu_1756_p1;
wire   [8:0] grp_fu_1756_p2;
wire    ap_CS_fsm_state38;
wire   [15:0] grp_fu_1764_p0;
wire   [8:0] grp_fu_1764_p1;
wire   [8:0] grp_fu_1764_p2;
wire    ap_CS_fsm_state47;
wire   [8:0] grp_fu_1772_p0;
wire   [10:0] grp_fu_1772_p1;
wire    ap_CS_fsm_state70;
reg    grp_fu_1751_ce;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
reg    grp_fu_1772_ce;
wire    ap_CS_fsm_state69;
reg   [73:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [17:0] grp_fu_1751_p10;
wire   [17:0] grp_fu_1756_p10;
wire   [17:0] grp_fu_1764_p10;
wire   [18:0] grp_fu_1772_p00;
reg    ap_condition_939;
reg    ap_condition_1159;
reg    ap_condition_1166;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 74'd1;
#0 error_flag = 32'd0;
#0 open_set_size = 16'd0;
#0 waypoint_count = 16'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 grp_os_heap_pop_fu_572_ap_start_reg = 1'b0;
#0 grp_os_heap_push_fu_586_ap_start_reg = 1'b0;
end

toplevel_local_ram #(
    .DataWidth( 32 ),
    .AddressRange( 7830 ),
    .AddressWidth( 13 ))
local_ram_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(local_ram_address0),
    .ce0(local_ram_ce0),
    .we0(local_ram_we0),
    .d0(MAXI_addr_read_reg_1797),
    .q0(local_ram_q0)
);

toplevel_waypoints_x_V #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
waypoints_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(waypoints_x_V_address0),
    .ce0(waypoints_x_V_ce0),
    .we0(waypoints_x_V_we0),
    .d0(waypoints_x_V_d0),
    .q0(waypoints_x_V_q0),
    .address1(waypoints_x_V_address1),
    .ce1(waypoints_x_V_ce1),
    .q1(waypoints_x_V_q1)
);

toplevel_waypoints_x_V #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
waypoints_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(waypoints_y_V_address0),
    .ce0(waypoints_y_V_ce0),
    .we0(waypoints_y_V_we0),
    .d0(waypoints_y_V_d0),
    .q0(waypoints_y_V_q0),
    .address1(waypoints_y_V_address1),
    .ce1(waypoints_y_V_ce1),
    .q1(waypoints_y_V_q1)
);

toplevel_closed_set #(
    .DataWidth( 32 ),
    .AddressRange( 7813 ),
    .AddressWidth( 13 ))
closed_set_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(closed_set_address0),
    .ce0(closed_set_ce0),
    .we0(closed_set_we0),
    .d0(closed_set_d0),
    .q0(closed_set_q0)
);

toplevel_open_set_heap_f_score_V #(
    .DataWidth( 11 ),
    .AddressRange( 25000 ),
    .AddressWidth( 15 ))
open_set_heap_f_score_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(open_set_heap_f_score_V_address0),
    .ce0(open_set_heap_f_score_V_ce0),
    .we0(open_set_heap_f_score_V_we0),
    .d0(open_set_heap_f_score_V_d0),
    .q0(open_set_heap_f_score_V_q0),
    .address1(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_address1),
    .ce1(open_set_heap_f_score_V_ce1),
    .we1(open_set_heap_f_score_V_we1),
    .d1(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_d1),
    .q1(open_set_heap_f_score_V_q1)
);

toplevel_open_set_heap_f_score_V #(
    .DataWidth( 11 ),
    .AddressRange( 25000 ),
    .AddressWidth( 15 ))
open_set_heap_g_score_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(open_set_heap_g_score_V_address0),
    .ce0(open_set_heap_g_score_V_ce0),
    .we0(open_set_heap_g_score_V_we0),
    .d0(open_set_heap_g_score_V_d0),
    .q0(open_set_heap_g_score_V_q0),
    .address1(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_address1),
    .ce1(open_set_heap_g_score_V_ce1),
    .we1(open_set_heap_g_score_V_we1),
    .d1(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_d1),
    .q1(open_set_heap_g_score_V_q1)
);

toplevel_open_set_heap_x_V #(
    .DataWidth( 9 ),
    .AddressRange( 25000 ),
    .AddressWidth( 15 ))
open_set_heap_x_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(open_set_heap_x_V_address0),
    .ce0(open_set_heap_x_V_ce0),
    .we0(open_set_heap_x_V_we0),
    .d0(open_set_heap_x_V_d0),
    .q0(open_set_heap_x_V_q0),
    .address1(grp_os_heap_pop_fu_572_open_set_heap_x_V_address1),
    .ce1(open_set_heap_x_V_ce1),
    .we1(open_set_heap_x_V_we1),
    .d1(grp_os_heap_pop_fu_572_open_set_heap_x_V_d1),
    .q1(open_set_heap_x_V_q1)
);

toplevel_open_set_heap_x_V #(
    .DataWidth( 9 ),
    .AddressRange( 25000 ),
    .AddressWidth( 15 ))
open_set_heap_y_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(open_set_heap_y_V_address0),
    .ce0(open_set_heap_y_V_ce0),
    .we0(open_set_heap_y_V_we0),
    .d0(open_set_heap_y_V_d0),
    .q0(open_set_heap_y_V_q0),
    .address1(grp_os_heap_pop_fu_572_open_set_heap_y_V_address1),
    .ce1(open_set_heap_y_V_ce1),
    .we1(open_set_heap_y_V_we1),
    .d1(grp_os_heap_pop_fu_572_open_set_heap_y_V_d1),
    .q1(open_set_heap_y_V_q1)
);

toplevel_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .code(storemerge_reg_556),
    .code_ap_vld(code_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

toplevel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ram(ram)
);

toplevel_MAXI_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_MAXI_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_MAXI_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_MAXI_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_MAXI_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_MAXI_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_MAXI_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_MAXI_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_MAXI_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_MAXI_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_MAXI_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_MAXI_CACHE_VALUE ))
MAXI_m_axi_U(
    .AWVALID(m_axi_MAXI_AWVALID),
    .AWREADY(m_axi_MAXI_AWREADY),
    .AWADDR(m_axi_MAXI_AWADDR),
    .AWID(m_axi_MAXI_AWID),
    .AWLEN(m_axi_MAXI_AWLEN),
    .AWSIZE(m_axi_MAXI_AWSIZE),
    .AWBURST(m_axi_MAXI_AWBURST),
    .AWLOCK(m_axi_MAXI_AWLOCK),
    .AWCACHE(m_axi_MAXI_AWCACHE),
    .AWPROT(m_axi_MAXI_AWPROT),
    .AWQOS(m_axi_MAXI_AWQOS),
    .AWREGION(m_axi_MAXI_AWREGION),
    .AWUSER(m_axi_MAXI_AWUSER),
    .WVALID(m_axi_MAXI_WVALID),
    .WREADY(m_axi_MAXI_WREADY),
    .WDATA(m_axi_MAXI_WDATA),
    .WSTRB(m_axi_MAXI_WSTRB),
    .WLAST(m_axi_MAXI_WLAST),
    .WID(m_axi_MAXI_WID),
    .WUSER(m_axi_MAXI_WUSER),
    .ARVALID(m_axi_MAXI_ARVALID),
    .ARREADY(m_axi_MAXI_ARREADY),
    .ARADDR(m_axi_MAXI_ARADDR),
    .ARID(m_axi_MAXI_ARID),
    .ARLEN(m_axi_MAXI_ARLEN),
    .ARSIZE(m_axi_MAXI_ARSIZE),
    .ARBURST(m_axi_MAXI_ARBURST),
    .ARLOCK(m_axi_MAXI_ARLOCK),
    .ARCACHE(m_axi_MAXI_ARCACHE),
    .ARPROT(m_axi_MAXI_ARPROT),
    .ARQOS(m_axi_MAXI_ARQOS),
    .ARREGION(m_axi_MAXI_ARREGION),
    .ARUSER(m_axi_MAXI_ARUSER),
    .RVALID(m_axi_MAXI_RVALID),
    .RREADY(m_axi_MAXI_RREADY),
    .RDATA(m_axi_MAXI_RDATA),
    .RLAST(m_axi_MAXI_RLAST),
    .RID(m_axi_MAXI_RID),
    .RUSER(m_axi_MAXI_RUSER),
    .RRESP(m_axi_MAXI_RRESP),
    .BVALID(m_axi_MAXI_BVALID),
    .BREADY(m_axi_MAXI_BREADY),
    .BRESP(m_axi_MAXI_BRESP),
    .BID(m_axi_MAXI_BID),
    .BUSER(m_axi_MAXI_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(MAXI_ARVALID),
    .I_ARREADY(MAXI_ARREADY),
    .I_ARADDR(MAXI_addr_reg_1781),
    .I_ARID(1'd0),
    .I_ARLEN(32'd7830),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(MAXI_RVALID),
    .I_RREADY(MAXI_RREADY),
    .I_RDATA(MAXI_RDATA),
    .I_RID(MAXI_RID),
    .I_RUSER(MAXI_RUSER),
    .I_RRESP(MAXI_RRESP),
    .I_RLAST(MAXI_RLAST),
    .I_AWVALID(MAXI_AWVALID),
    .I_AWREADY(MAXI_AWREADY),
    .I_AWADDR(MAXI_addr_reg_1781),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(MAXI_WVALID),
    .I_WREADY(MAXI_WREADY),
    .I_WDATA(MAXI_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(MAXI_BVALID),
    .I_BREADY(MAXI_BREADY),
    .I_BRESP(MAXI_BRESP),
    .I_BID(MAXI_BID),
    .I_BUSER(MAXI_BUSER)
);

toplevel_os_heap_pop grp_os_heap_pop_fu_572(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_os_heap_pop_fu_572_ap_start),
    .ap_done(grp_os_heap_pop_fu_572_ap_done),
    .ap_idle(grp_os_heap_pop_fu_572_ap_idle),
    .ap_ready(grp_os_heap_pop_fu_572_ap_ready),
    .open_set_size_i(open_set_size),
    .open_set_size_o(grp_os_heap_pop_fu_572_open_set_size_o),
    .open_set_size_o_ap_vld(grp_os_heap_pop_fu_572_open_set_size_o_ap_vld),
    .open_set_heap_f_score_V_address0(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_address0),
    .open_set_heap_f_score_V_ce0(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_ce0),
    .open_set_heap_f_score_V_we0(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_we0),
    .open_set_heap_f_score_V_d0(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_d0),
    .open_set_heap_f_score_V_q0(open_set_heap_f_score_V_q0),
    .open_set_heap_f_score_V_address1(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_address1),
    .open_set_heap_f_score_V_ce1(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_ce1),
    .open_set_heap_f_score_V_we1(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_we1),
    .open_set_heap_f_score_V_d1(grp_os_heap_pop_fu_572_open_set_heap_f_score_V_d1),
    .open_set_heap_f_score_V_q1(open_set_heap_f_score_V_q1),
    .open_set_heap_g_score_V_address0(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_address0),
    .open_set_heap_g_score_V_ce0(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_ce0),
    .open_set_heap_g_score_V_we0(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_we0),
    .open_set_heap_g_score_V_d0(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_d0),
    .open_set_heap_g_score_V_q0(open_set_heap_g_score_V_q0),
    .open_set_heap_g_score_V_address1(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_address1),
    .open_set_heap_g_score_V_ce1(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_ce1),
    .open_set_heap_g_score_V_we1(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_we1),
    .open_set_heap_g_score_V_d1(grp_os_heap_pop_fu_572_open_set_heap_g_score_V_d1),
    .open_set_heap_g_score_V_q1(open_set_heap_g_score_V_q1),
    .open_set_heap_x_V_address0(grp_os_heap_pop_fu_572_open_set_heap_x_V_address0),
    .open_set_heap_x_V_ce0(grp_os_heap_pop_fu_572_open_set_heap_x_V_ce0),
    .open_set_heap_x_V_we0(grp_os_heap_pop_fu_572_open_set_heap_x_V_we0),
    .open_set_heap_x_V_d0(grp_os_heap_pop_fu_572_open_set_heap_x_V_d0),
    .open_set_heap_x_V_q0(open_set_heap_x_V_q0),
    .open_set_heap_x_V_address1(grp_os_heap_pop_fu_572_open_set_heap_x_V_address1),
    .open_set_heap_x_V_ce1(grp_os_heap_pop_fu_572_open_set_heap_x_V_ce1),
    .open_set_heap_x_V_we1(grp_os_heap_pop_fu_572_open_set_heap_x_V_we1),
    .open_set_heap_x_V_d1(grp_os_heap_pop_fu_572_open_set_heap_x_V_d1),
    .open_set_heap_x_V_q1(open_set_heap_x_V_q1),
    .open_set_heap_y_V_address0(grp_os_heap_pop_fu_572_open_set_heap_y_V_address0),
    .open_set_heap_y_V_ce0(grp_os_heap_pop_fu_572_open_set_heap_y_V_ce0),
    .open_set_heap_y_V_we0(grp_os_heap_pop_fu_572_open_set_heap_y_V_we0),
    .open_set_heap_y_V_d0(grp_os_heap_pop_fu_572_open_set_heap_y_V_d0),
    .open_set_heap_y_V_q0(open_set_heap_y_V_q0),
    .open_set_heap_y_V_address1(grp_os_heap_pop_fu_572_open_set_heap_y_V_address1),
    .open_set_heap_y_V_ce1(grp_os_heap_pop_fu_572_open_set_heap_y_V_ce1),
    .open_set_heap_y_V_we1(grp_os_heap_pop_fu_572_open_set_heap_y_V_we1),
    .open_set_heap_y_V_d1(grp_os_heap_pop_fu_572_open_set_heap_y_V_d1),
    .open_set_heap_y_V_q1(open_set_heap_y_V_q1),
    .ap_return_0(grp_os_heap_pop_fu_572_ap_return_0),
    .ap_return_1(grp_os_heap_pop_fu_572_ap_return_1),
    .ap_return_2(grp_os_heap_pop_fu_572_ap_return_2)
);

toplevel_os_heap_push grp_os_heap_push_fu_586(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_os_heap_push_fu_586_ap_start),
    .ap_done(grp_os_heap_push_fu_586_ap_done),
    .ap_idle(grp_os_heap_push_fu_586_ap_idle),
    .ap_ready(grp_os_heap_push_fu_586_ap_ready),
    .node_f_score(grp_os_heap_push_fu_586_node_f_score),
    .node_g_score(grp_os_heap_push_fu_586_node_g_score),
    .node_x(grp_os_heap_push_fu_586_node_x),
    .node_y(grp_os_heap_push_fu_586_node_y),
    .open_set_size_i(open_set_size),
    .open_set_size_o(grp_os_heap_push_fu_586_open_set_size_o),
    .open_set_size_o_ap_vld(grp_os_heap_push_fu_586_open_set_size_o_ap_vld),
    .open_set_heap_f_score_V_address0(grp_os_heap_push_fu_586_open_set_heap_f_score_V_address0),
    .open_set_heap_f_score_V_ce0(grp_os_heap_push_fu_586_open_set_heap_f_score_V_ce0),
    .open_set_heap_f_score_V_we0(grp_os_heap_push_fu_586_open_set_heap_f_score_V_we0),
    .open_set_heap_f_score_V_d0(grp_os_heap_push_fu_586_open_set_heap_f_score_V_d0),
    .open_set_heap_f_score_V_q0(open_set_heap_f_score_V_q0),
    .open_set_heap_g_score_V_address0(grp_os_heap_push_fu_586_open_set_heap_g_score_V_address0),
    .open_set_heap_g_score_V_ce0(grp_os_heap_push_fu_586_open_set_heap_g_score_V_ce0),
    .open_set_heap_g_score_V_we0(grp_os_heap_push_fu_586_open_set_heap_g_score_V_we0),
    .open_set_heap_g_score_V_d0(grp_os_heap_push_fu_586_open_set_heap_g_score_V_d0),
    .open_set_heap_g_score_V_q0(open_set_heap_g_score_V_q0),
    .open_set_heap_x_V_address0(grp_os_heap_push_fu_586_open_set_heap_x_V_address0),
    .open_set_heap_x_V_ce0(grp_os_heap_push_fu_586_open_set_heap_x_V_ce0),
    .open_set_heap_x_V_we0(grp_os_heap_push_fu_586_open_set_heap_x_V_we0),
    .open_set_heap_x_V_d0(grp_os_heap_push_fu_586_open_set_heap_x_V_d0),
    .open_set_heap_x_V_q0(open_set_heap_x_V_q0),
    .open_set_heap_y_V_address0(grp_os_heap_push_fu_586_open_set_heap_y_V_address0),
    .open_set_heap_y_V_ce0(grp_os_heap_push_fu_586_open_set_heap_y_V_ce0),
    .open_set_heap_y_V_we0(grp_os_heap_push_fu_586_open_set_heap_y_V_we0),
    .open_set_heap_y_V_d0(grp_os_heap_push_fu_586_open_set_heap_y_V_d0),
    .open_set_heap_y_V_q0(open_set_heap_y_V_q0),
    .error_flag(grp_os_heap_push_fu_586_error_flag),
    .error_flag_ap_vld(grp_os_heap_push_fu_586_error_flag_ap_vld)
);

toplevel_mul_mul_16ns_16ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 18 ))
mul_mul_16ns_16ns_18_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1743_p0),
    .din1(grp_fu_1743_p1),
    .ce(1'b1),
    .dout(grp_fu_1743_p2)
);

toplevel_mul_mul_16ns_9ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_mul_16ns_9ns_18_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1751_p0),
    .din1(grp_fu_1751_p1),
    .ce(grp_fu_1751_ce),
    .dout(grp_fu_1751_p2)
);

toplevel_mac_muladd_16ns_9ns_9ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mac_muladd_16ns_9ns_9ns_18_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1756_p0),
    .din1(grp_fu_1756_p1),
    .din2(grp_fu_1756_p2),
    .ce(1'b1),
    .dout(grp_fu_1756_p3)
);

toplevel_mac_muladd_16ns_9ns_9ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mac_muladd_16ns_9ns_9ns_18_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1764_p0),
    .din1(grp_fu_1764_p1),
    .din2(grp_fu_1764_p2),
    .ce(1'b1),
    .dout(grp_fu_1764_p3)
);

toplevel_mac_muladd_9ns_11ns_32ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mac_muladd_9ns_11ns_32ns_32_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1772_p0),
    .din1(grp_fu_1772_p1),
    .din2(empty_30_reg_512),
    .ce(grp_fu_1772_ce),
    .dout(grp_fu_1772_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((or_ln373_1_fu_743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state15))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state15);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((or_ln373_1_fu_743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_os_heap_pop_fu_572_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state29)) begin
            grp_os_heap_pop_fu_572_ap_start_reg <= 1'b1;
        end else if ((grp_os_heap_pop_fu_572_ap_ready == 1'b1)) begin
            grp_os_heap_pop_fu_572_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_os_heap_push_fu_586_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state25))) begin
            grp_os_heap_push_fu_586_ap_start_reg <= 1'b1;
        end else if ((grp_os_heap_push_fu_586_ap_ready == 1'b1)) begin
            grp_os_heap_push_fu_586_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_617_p2 == 1'd0)) begin
        if ((1'b1 == ap_CS_fsm_state68)) begin
            add42507_ph_reg_491 <= total_length_1_fu_1727_p2;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            add42507_ph_reg_491 <= total_length_reg_432;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state67) & ((icmp_ln266_reg_1976 == 1'd0) | ((icmp_ln396_reg_2346 == 1'd0) & (icmp_ln280_reg_1989 == 1'd0) & (icmp_ln277_1_reg_1980 == 1'd1) & (icmp_ln277_reg_1862 == 1'd0) & (1'd1 == and_ln288_reg_2035))))) begin
        add42507_reg_526 <= add42507_ph_reg_491;
    end else if ((((1'b1 == ap_CS_fsm_state67) & ((((icmp_ln277_1_reg_1980 == 1'd0) & (icmp_ln266_reg_1976 == 1'd1)) | ((icmp_ln280_reg_1989 == 1'd1) & (icmp_ln266_reg_1976 == 1'd1))) | ((icmp_ln266_reg_1976 == 1'd1) & (icmp_ln277_reg_1862 == 1'd1)))) | ((icmp_ln280_reg_1989 == 1'd0) & (icmp_ln277_1_reg_1980 == 1'd1) & (icmp_ln266_reg_1976 == 1'd1) & (icmp_ln277_reg_1862 == 1'd0) & (1'd0 == and_ln288_reg_2035) & (1'b1 == ap_CS_fsm_state67)))) begin
        add42507_reg_526 <= total_length_reg_432;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state67)) begin
        if ((1'b1 == ap_condition_1166)) begin
            empty_30_reg_512 <= p_ph49_reg_502;
        end else if ((1'b1 == ap_condition_1159)) begin
            empty_30_reg_512 <= p_ph_reg_477;
        end else if ((1'b1 == ap_condition_939)) begin
            empty_30_reg_512 <= select_ln342_fu_1713_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        error_flag <= 32'd0;
    end else if (((icmp_ln391_reg_1866 == 1'd1) & (or_ln373_1_reg_1820 == 1'd0) & (1'b1 == MAXI_AWREADY) & (1'b1 == ap_CS_fsm_state71))) begin
        error_flag <= grp_fu_1772_p3;
    end else if ((((1'b1 == ap_CS_fsm_state65) & (grp_os_heap_push_fu_586_error_flag_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (grp_os_heap_push_fu_586_error_flag_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_os_heap_push_fu_586_error_flag_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (grp_os_heap_push_fu_586_error_flag_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_os_heap_push_fu_586_error_flag_ap_vld == 1'b1)))) begin
        error_flag <= grp_os_heap_push_fu_586_error_flag;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln373_1_fu_743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        i_2_reg_420 <= 8'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln379_reg_1829 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_2_reg_420 <= i_3_reg_1824;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_4_reg_444 <= 8'd0;
    end else if (((grp_fu_617_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        i_4_reg_444 <= i_7_reg_1870;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln257_fu_883_p2 == 1'd0))) begin
        i_5_reg_455 <= i_6_fu_877_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        i_5_reg_455 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln366_reg_1793 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_408 <= i_1_reg_1788;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_408 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_617_p2 == 1'd1) & (icmp_ln277_reg_1862 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        iteration_reg_466 <= 19'd0;
    end else if (((1'b1 == ap_CS_fsm_state66) & ((icmp_ln292_reg_2056 == 1'd0) | ((or_ln312_3_reg_2274 == 1'd1) | ((icmp_ln317_3_reg_2299 == 1'd0) | ((icmp_ln322_3_reg_2308 == 1'd0) | (grp_fu_617_p2 == 1'd1))))))) begin
        iteration_reg_466 <= iteration_1_reg_1984;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state24) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        open_set_size <= 16'd0;
    end else if ((((1'b1 == ap_CS_fsm_state65) & (grp_os_heap_push_fu_586_open_set_size_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state59) & (grp_os_heap_push_fu_586_open_set_size_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state53) & (grp_os_heap_push_fu_586_open_set_size_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state44) & (grp_os_heap_push_fu_586_open_set_size_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state26) & (grp_os_heap_push_fu_586_open_set_size_o_ap_vld == 1'b1)))) begin
        open_set_size <= grp_os_heap_push_fu_586_open_set_size_o;
    end else if (((1'b1 == ap_CS_fsm_state30) & (grp_os_heap_pop_fu_572_open_set_size_o_ap_vld == 1'b1))) begin
        open_set_size <= grp_os_heap_pop_fu_572_open_set_size_o;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        storemerge12_reg_541 <= total_length_reg_432;
    end else if (((or_ln373_1_fu_743_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        storemerge12_reg_541 <= 28'd0;
    end else if (((icmp_ln391_reg_1866 == 1'd1) & (or_ln373_1_reg_1820 == 1'd0) & (1'b1 == MAXI_AWREADY) & (1'b1 == ap_CS_fsm_state71))) begin
        storemerge12_reg_541 <= add42507_reg_526;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        storemerge_reg_556 <= 32'd0;
    end else if (((or_ln373_1_fu_743_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state14))) begin
        storemerge_reg_556 <= 32'd10000;
    end else if (((icmp_ln391_reg_1866 == 1'd1) & (or_ln373_1_reg_1820 == 1'd0) & (1'b1 == MAXI_AWREADY) & (1'b1 == ap_CS_fsm_state71))) begin
        storemerge_reg_556 <= grp_fu_1772_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        total_length_reg_432 <= 28'd0;
    end else if (((grp_fu_617_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
        total_length_reg_432 <= total_length_1_fu_1727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln366_reg_1793 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MAXI_addr_read_reg_1797 <= MAXI_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        MAXI_addr_reg_1781 <= sext_ln366_fu_665_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln391_fu_843_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        add_ln394_reg_1885 <= add_ln394_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        and_ln288_reg_2035 <= and_ln288_fu_1009_p2;
        current_g_score_V_reg_1993 <= grp_os_heap_pop_fu_572_ap_return_0;
        current_x_V_reg_1999 <= grp_os_heap_pop_fu_572_ap_return_1;
        current_y_V_reg_2011 <= grp_os_heap_pop_fu_572_ap_return_2;
        zext_ln870_reg_2023[8 : 0] <= zext_ln870_fu_991_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        bit_idx_1_reg_2098 <= bit_idx_1_fu_1112_p1;
        word_idx_1_reg_2103 <= {{grp_fu_1756_p3[17:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        bit_idx_2_reg_2161 <= bit_idx_2_fu_1267_p1;
        word_idx_2_reg_2166 <= {{grp_fu_1764_p3[17:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln312_2_fu_1414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
        bit_idx_3_reg_2221 <= bit_idx_3_fu_1425_p1;
        word_idx_3_reg_2226 <= {{idx_3_fu_1420_p2[17:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state60) & ((((((or_ln312_3_fu_1577_p2 == 1'd0) & (icmp_ln322_2_reg_2250 == 1'd0)) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (grp_fu_617_p2 == 1'd1))) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (icmp_ln317_2_reg_2241 == 1'd0))) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (or_ln312_2_reg_2217 == 1'd1))) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd1))))) begin
        bit_idx_4_reg_2278 <= bit_idx_4_fu_1588_p1;
        word_idx_4_reg_2283 <= {{idx_4_fu_1583_p2[17:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        bit_idx_reg_2046 <= bit_idx_fu_1019_p1;
        closed_set_addr_1_reg_2051 <= zext_ln70_fu_1033_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cmp_i_i124_i_reg_2069 <= cmp_i_i124_i_fu_1070_p2;
        cmp_i_i130_i_reg_2065 <= cmp_i_i130_i_fu_1065_p2;
        neighbour_node_g_score_V_reg_2073 <= neighbour_node_g_score_V_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        goal_x_V_reg_1914 <= waypoints_x_V_q0;
        goal_y_V_reg_1924 <= waypoints_y_V_q0;
        start_x_V_reg_1900 <= waypoints_x_V_q1;
        start_y_V_reg_1907 <= waypoints_y_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        h_start_V_reg_1966 <= h_start_V_fu_962_p2;
        zext_ln83_1_reg_1942[8 : 0] <= zext_ln83_1_fu_901_p1[8 : 0];
        zext_ln83_3_reg_1954[8 : 0] <= zext_ln83_3_fu_935_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1788 <= i_1_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_3_reg_1824 <= i_3_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_7_reg_1870 <= i_7_fu_849_p2;
        icmp_ln391_reg_1866 <= icmp_ln391_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_408_pp0_iter1_reg <= i_reg_408;
        icmp_ln366_reg_1793 <= icmp_ln366_fu_681_p2;
        icmp_ln366_reg_1793_pp0_iter1_reg <= icmp_ln366_reg_1793;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        icmp_ln266_reg_1976 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        icmp_ln277_1_reg_1980 <= icmp_ln277_1_fu_968_p2;
        iteration_1_reg_1984 <= iteration_1_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        icmp_ln277_reg_1862 <= icmp_ln277_fu_820_p2;
        iteration_limit_reg_1857[18 : 1] <= iteration_limit_fu_813_p3[18 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln277_1_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        icmp_ln280_reg_1989 <= grp_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        icmp_ln292_reg_2056 <= icmp_ln292_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        icmp_ln317_1_reg_2182 <= icmp_ln317_1_fu_1304_p2;
        shl_ln317_1_reg_2177 <= shl_ln317_1_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        icmp_ln317_2_reg_2241 <= icmp_ln317_2_fu_1465_p2;
        shl_ln317_2_reg_2236 <= shl_ln317_2_fu_1453_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        icmp_ln317_3_reg_2299 <= icmp_ln317_3_fu_1627_p2;
        shl_ln317_3_reg_2294 <= shl_ln317_3_fu_1615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        icmp_ln317_reg_2119 <= icmp_ln317_fu_1149_p2;
        shl_ln317_reg_2114 <= shl_ln317_fu_1137_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        icmp_ln322_1_reg_2191 <= icmp_ln322_1_fu_1319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        icmp_ln322_2_reg_2250 <= icmp_ln322_2_fu_1480_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        icmp_ln322_3_reg_2308 <= icmp_ln322_3_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        icmp_ln322_reg_2128 <= icmp_ln322_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln379_reg_1829 <= icmp_ln379_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        icmp_ln396_reg_2346 <= grp_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        local_ram_load_reg_1802 <= local_ram_q0;
        op2_assign_reg_1807 <= {{local_ram_q0[31:16]}};
        trunc_ln371_reg_1814 <= trunc_ln371_fu_702_p1;
        waypoint_count <= trunc_ln371_fu_702_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        mul_ln67_reg_2039 <= grp_fu_1751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state60) & ((cmp_i_i130_i_reg_2065 == 1'd1) | ((or_ln312_2_reg_2217 == 1'd1) | ((icmp_ln317_2_reg_2241 == 1'd0) | ((icmp_ln322_2_reg_2250 == 1'd0) | (grp_fu_617_p2 == 1'd1))))))) begin
        n_x_V_3_reg_2267 <= n_x_V_3_fu_1551_p2;
        or_ln312_3_reg_2274 <= or_ln312_3_fu_1577_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) & (((((icmp_ln322_1_reg_2191 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd0)) | ((cmp_i_i130_i_reg_2065 == 1'd0) & (grp_fu_617_p2 == 1'd1))) | ((icmp_ln317_1_reg_2182 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd0))) | ((or_ln312_1_reg_2157 == 1'd1) & (cmp_i_i130_i_reg_2065 == 1'd0))))) begin
        n_x_V_reg_2208 <= n_x_V_fu_1390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & ((cmp_i_i124_i_reg_2069 == 1'd1) | ((or_ln312_reg_2094 == 1'd1) | ((icmp_ln317_reg_2119 == 1'd0) | ((icmp_ln322_reg_2128 == 1'd0) | (grp_fu_617_p2 == 1'd1))))))) begin
        n_y_V_1_reg_2145 <= n_y_V_1_fu_1235_p2;
        or_ln312_1_reg_2157 <= or_ln312_1_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i124_i_fu_1070_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        n_y_V_reg_2082 <= n_y_V_fu_1080_p2;
        or_ln312_reg_2094 <= or_ln312_fu_1106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_1_fu_1319_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        neighbour_node_f_score_V_1_reg_2195 <= neighbour_node_f_score_V_1_fu_1384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_2_fu_1480_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        neighbour_node_f_score_V_2_reg_2254 <= neighbour_node_f_score_V_2_fu_1545_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_3_fu_1642_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        neighbour_node_f_score_V_3_reg_2312 <= neighbour_node_f_score_V_3_fu_1707_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln322_fu_1164_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        neighbour_node_f_score_V_reg_2132 <= neighbour_node_f_score_V_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        or_ln312_2_reg_2217 <= or_ln312_2_fu_1414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        or_ln373_1_reg_1820 <= or_ln373_1_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln292_fu_1053_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        or_ln78_reg_2060 <= or_ln78_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state68)) | ((grp_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27)))) begin
        p_ph49_reg_502 <= error_flag;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln322_3_reg_2308 == 1'd1) & (icmp_ln317_3_reg_2299 == 1'd1) & (or_ln312_3_reg_2274 == 1'd0) & (icmp_ln292_reg_2056 == 1'd1) & (grp_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state66)) | ((icmp_ln322_2_reg_2250 == 1'd1) & (icmp_ln317_2_reg_2241 == 1'd1) & (or_ln312_2_reg_2217 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd0) & (grp_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state60)) | ((icmp_ln322_1_reg_2191 == 1'd1) & (icmp_ln317_1_reg_2182 == 1'd1) & (or_ln312_1_reg_2157 == 1'd0) & (grp_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54)) | ((icmp_ln322_reg_2128 == 1'd1) & (icmp_ln317_reg_2119 == 1'd1) & (or_ln312_reg_2094 == 1'd0) & (cmp_i_i124_i_reg_2069 == 1'd0) & (grp_fu_617_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        p_ph_reg_477 <= error_flag;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        trunc_ln3_reg_1838 <= {{local_ram_load_reg_1802[24:16]}};
        zext_ln275_reg_1848[15 : 0] <= zext_ln275_fu_810_p1[15 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
        MAXI_ARVALID = 1'b1;
    end else begin
        MAXI_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_AWREADY) & (1'b1 == ap_CS_fsm_state71))) begin
        MAXI_AWVALID = 1'b1;
    end else begin
        MAXI_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_BVALID) & (1'b1 == ap_CS_fsm_state77))) begin
        MAXI_BREADY = 1'b1;
    end else begin
        MAXI_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln366_reg_1793 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MAXI_RREADY = 1'b1;
    end else begin
        MAXI_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_WREADY) & (1'b1 == ap_CS_fsm_state72))) begin
        MAXI_WVALID = 1'b1;
    end else begin
        MAXI_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        MAXI_blk_n_AR = m_axi_MAXI_ARREADY;
    end else begin
        MAXI_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        MAXI_blk_n_AW = m_axi_MAXI_AWREADY;
    end else begin
        MAXI_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        MAXI_blk_n_B = m_axi_MAXI_BVALID;
    end else begin
        MAXI_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln366_reg_1793 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        MAXI_blk_n_R = m_axi_MAXI_RVALID;
    end else begin
        MAXI_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        MAXI_blk_n_W = m_axi_MAXI_WREADY;
    end else begin
        MAXI_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((icmp_ln366_fu_681_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln379_fu_759_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_BVALID) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln379_reg_1829 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_2_phi_fu_424_p4 = i_3_reg_1824;
    end else begin
        ap_phi_mux_i_2_phi_fu_424_p4 = i_2_reg_420;
    end
end

always @ (*) begin
    if (((icmp_ln366_reg_1793 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_412_p4 = i_1_reg_1788;
    end else begin
        ap_phi_mux_i_phi_fu_412_p4 = i_reg_408;
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_BVALID) & (1'b1 == ap_CS_fsm_state77))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        closed_set_address0 = zext_ln70_4_fu_1633_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        closed_set_address0 = zext_ln70_3_fu_1471_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        closed_set_address0 = zext_ln70_2_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        closed_set_address0 = zext_ln70_1_fu_1155_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        closed_set_address0 = closed_set_addr_1_reg_2051;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        closed_set_address0 = zext_ln70_fu_1033_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        closed_set_address0 = zext_ln258_fu_889_p1;
    end else begin
        closed_set_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state23))) begin
        closed_set_ce0 = 1'b1;
    end else begin
        closed_set_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        closed_set_d0 = or_ln78_reg_2060;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        closed_set_d0 = 32'd0;
    end else begin
        closed_set_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b1 == ap_CS_fsm_state23) & (icmp_ln257_fu_883_p2 == 1'd0)))) begin
        closed_set_we0 = 1'b1;
    end else begin
        closed_set_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == MAXI_WREADY) & (1'b1 == ap_CS_fsm_state72))) begin
        code_ap_vld = 1'b1;
    end else begin
        code_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | ((1'b1 == ap_CS_fsm_state30) & (grp_os_heap_pop_fu_572_ap_done == 1'b1)))) begin
        grp_fu_1751_ce = 1'b1;
    end else begin
        grp_fu_1751_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state70) | ((1'b1 == MAXI_AWREADY) & (1'b1 == ap_CS_fsm_state71)))) begin
        grp_fu_1772_ce = 1'b1;
    end else begin
        grp_fu_1772_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_os_heap_push_fu_586_node_f_score = neighbour_node_f_score_V_3_reg_2312;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_os_heap_push_fu_586_node_f_score = neighbour_node_f_score_V_2_reg_2254;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_os_heap_push_fu_586_node_f_score = neighbour_node_f_score_V_1_reg_2195;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_os_heap_push_fu_586_node_f_score = neighbour_node_f_score_V_reg_2132;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_os_heap_push_fu_586_node_f_score = h_start_V_reg_1966;
    end else begin
        grp_os_heap_push_fu_586_node_f_score = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_os_heap_push_fu_586_node_g_score = neighbour_node_g_score_V_reg_2073;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_os_heap_push_fu_586_node_g_score = 11'd0;
    end else begin
        grp_os_heap_push_fu_586_node_g_score = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_os_heap_push_fu_586_node_x = n_x_V_3_reg_2267;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        grp_os_heap_push_fu_586_node_x = n_x_V_reg_2208;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_os_heap_push_fu_586_node_x = current_x_V_reg_1999;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_os_heap_push_fu_586_node_x = start_x_V_reg_1900;
    end else begin
        grp_os_heap_push_fu_586_node_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_os_heap_push_fu_586_node_y = current_y_V_reg_2011;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_os_heap_push_fu_586_node_y = n_y_V_1_reg_2145;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_os_heap_push_fu_586_node_y = n_y_V_reg_2082;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_os_heap_push_fu_586_node_y = start_y_V_reg_1907;
    end else begin
        grp_os_heap_push_fu_586_node_y = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        local_ram_address0 = zext_ln62_3_fu_1607_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        local_ram_address0 = zext_ln62_2_fu_1445_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        local_ram_address0 = zext_ln62_1_fu_1284_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        local_ram_address0 = zext_ln62_fu_1129_p1;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        local_ram_address0 = zext_ln380_fu_774_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        local_ram_address0 = 13'd0;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        local_ram_address0 = zext_ln367_fu_687_p1;
    end else begin
        local_ram_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state12) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        local_ram_ce0 = 1'b1;
    end else begin
        local_ram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln366_reg_1793_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_ram_we0 = 1'b1;
    end else begin
        local_ram_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_f_score_V_address0 = grp_os_heap_push_fu_586_open_set_heap_f_score_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_V_address0 = grp_os_heap_pop_fu_572_open_set_heap_f_score_V_address0;
    end else begin
        open_set_heap_f_score_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_f_score_V_ce0 = grp_os_heap_push_fu_586_open_set_heap_f_score_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_V_ce0 = grp_os_heap_pop_fu_572_open_set_heap_f_score_V_ce0;
    end else begin
        open_set_heap_f_score_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_V_ce1 = grp_os_heap_pop_fu_572_open_set_heap_f_score_V_ce1;
    end else begin
        open_set_heap_f_score_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_f_score_V_d0 = grp_os_heap_push_fu_586_open_set_heap_f_score_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_V_d0 = grp_os_heap_pop_fu_572_open_set_heap_f_score_V_d0;
    end else begin
        open_set_heap_f_score_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_f_score_V_we0 = grp_os_heap_push_fu_586_open_set_heap_f_score_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_V_we0 = grp_os_heap_pop_fu_572_open_set_heap_f_score_V_we0;
    end else begin
        open_set_heap_f_score_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_V_we1 = grp_os_heap_pop_fu_572_open_set_heap_f_score_V_we1;
    end else begin
        open_set_heap_f_score_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_g_score_V_address0 = grp_os_heap_push_fu_586_open_set_heap_g_score_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_V_address0 = grp_os_heap_pop_fu_572_open_set_heap_g_score_V_address0;
    end else begin
        open_set_heap_g_score_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_g_score_V_ce0 = grp_os_heap_push_fu_586_open_set_heap_g_score_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_V_ce0 = grp_os_heap_pop_fu_572_open_set_heap_g_score_V_ce0;
    end else begin
        open_set_heap_g_score_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_V_ce1 = grp_os_heap_pop_fu_572_open_set_heap_g_score_V_ce1;
    end else begin
        open_set_heap_g_score_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_g_score_V_d0 = grp_os_heap_push_fu_586_open_set_heap_g_score_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_V_d0 = grp_os_heap_pop_fu_572_open_set_heap_g_score_V_d0;
    end else begin
        open_set_heap_g_score_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_g_score_V_we0 = grp_os_heap_push_fu_586_open_set_heap_g_score_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_V_we0 = grp_os_heap_pop_fu_572_open_set_heap_g_score_V_we0;
    end else begin
        open_set_heap_g_score_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_V_we1 = grp_os_heap_pop_fu_572_open_set_heap_g_score_V_we1;
    end else begin
        open_set_heap_g_score_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_x_V_address0 = grp_os_heap_push_fu_586_open_set_heap_x_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_V_address0 = grp_os_heap_pop_fu_572_open_set_heap_x_V_address0;
    end else begin
        open_set_heap_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_x_V_ce0 = grp_os_heap_push_fu_586_open_set_heap_x_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_V_ce0 = grp_os_heap_pop_fu_572_open_set_heap_x_V_ce0;
    end else begin
        open_set_heap_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_V_ce1 = grp_os_heap_pop_fu_572_open_set_heap_x_V_ce1;
    end else begin
        open_set_heap_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_x_V_d0 = grp_os_heap_push_fu_586_open_set_heap_x_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_V_d0 = grp_os_heap_pop_fu_572_open_set_heap_x_V_d0;
    end else begin
        open_set_heap_x_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_x_V_we0 = grp_os_heap_push_fu_586_open_set_heap_x_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_V_we0 = grp_os_heap_pop_fu_572_open_set_heap_x_V_we0;
    end else begin
        open_set_heap_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_V_we1 = grp_os_heap_pop_fu_572_open_set_heap_x_V_we1;
    end else begin
        open_set_heap_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_y_V_address0 = grp_os_heap_push_fu_586_open_set_heap_y_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_V_address0 = grp_os_heap_pop_fu_572_open_set_heap_y_V_address0;
    end else begin
        open_set_heap_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_y_V_ce0 = grp_os_heap_push_fu_586_open_set_heap_y_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_V_ce0 = grp_os_heap_pop_fu_572_open_set_heap_y_V_ce0;
    end else begin
        open_set_heap_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_V_ce1 = grp_os_heap_pop_fu_572_open_set_heap_y_V_ce1;
    end else begin
        open_set_heap_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_y_V_d0 = grp_os_heap_push_fu_586_open_set_heap_y_V_d0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_V_d0 = grp_os_heap_pop_fu_572_open_set_heap_y_V_d0;
    end else begin
        open_set_heap_y_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state26))) begin
        open_set_heap_y_V_we0 = grp_os_heap_push_fu_586_open_set_heap_y_V_we0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_V_we0 = grp_os_heap_pop_fu_572_open_set_heap_y_V_we0;
    end else begin
        open_set_heap_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_V_we1 = grp_os_heap_pop_fu_572_open_set_heap_y_V_we1;
    end else begin
        open_set_heap_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        waypoints_x_V_address0 = zext_ln394_1_fu_871_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        waypoints_x_V_address0 = zext_ln381_fu_790_p1;
    end else begin
        waypoints_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        waypoints_x_V_ce0 = 1'b1;
    end else begin
        waypoints_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        waypoints_x_V_ce1 = 1'b1;
    end else begin
        waypoints_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln379_reg_1829 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        waypoints_x_V_we0 = 1'b1;
    end else begin
        waypoints_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        waypoints_y_V_address0 = zext_ln394_1_fu_871_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        waypoints_y_V_address0 = zext_ln381_fu_790_p1;
    end else begin
        waypoints_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        waypoints_y_V_ce0 = 1'b1;
    end else begin
        waypoints_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        waypoints_y_V_ce1 = 1'b1;
    end else begin
        waypoints_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln379_reg_1829 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        waypoints_y_V_we0 = 1'b1;
    end else begin
        waypoints_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == MAXI_ARREADY) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln366_fu_681_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln366_fu_681_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((or_ln373_1_fu_743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln379_fu_759_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln379_fu_759_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln391_fu_843_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln257_fu_883_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (grp_os_heap_push_fu_586_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((grp_fu_617_p2 == 1'd1) & (icmp_ln277_reg_1862 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b1 == ap_CS_fsm_state28) & ((grp_fu_627_p2 == 1'd1) | (icmp_ln277_1_fu_968_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'd1 == and_ln288_fu_1009_p2) & (1'b1 == ap_CS_fsm_state30) & (grp_os_heap_pop_fu_572_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else if (((1'd0 == and_ln288_fu_1009_p2) & (1'b1 == ap_CS_fsm_state30) & (grp_os_heap_pop_fu_572_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln292_fu_1053_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            if (((or_ln312_fu_1106_p2 == 1'd0) & (cmp_i_i124_i_fu_1070_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln317_fu_1149_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((icmp_ln322_fu_1164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (grp_os_heap_push_fu_586_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & ((((((or_ln312_1_fu_1261_p2 == 1'd1) & (icmp_ln322_reg_2128 == 1'd0)) | ((or_ln312_1_fu_1261_p2 == 1'd1) & (grp_fu_617_p2 == 1'd1))) | ((or_ln312_1_fu_1261_p2 == 1'd1) & (icmp_ln317_reg_2119 == 1'd0))) | ((or_ln312_1_fu_1261_p2 == 1'd1) & (or_ln312_reg_2094 == 1'd1))) | ((or_ln312_1_fu_1261_p2 == 1'd1) & (cmp_i_i124_i_reg_2069 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else if (((1'b1 == ap_CS_fsm_state45) & ((((((or_ln312_1_fu_1261_p2 == 1'd0) & (icmp_ln322_reg_2128 == 1'd0)) | ((or_ln312_1_fu_1261_p2 == 1'd0) & (grp_fu_617_p2 == 1'd1))) | ((or_ln312_1_fu_1261_p2 == 1'd0) & (icmp_ln317_reg_2119 == 1'd0))) | ((or_ln312_1_fu_1261_p2 == 1'd0) & (or_ln312_reg_2094 == 1'd1))) | ((or_ln312_1_fu_1261_p2 == 1'd0) & (cmp_i_i124_i_reg_2069 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln317_1_fu_1304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((icmp_ln322_1_fu_1319_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (grp_os_heap_push_fu_586_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((1'b1 == ap_CS_fsm_state54) & (((((cmp_i_i130_i_reg_2065 == 1'd1) & (grp_fu_617_p2 == 1'd1)) | ((icmp_ln322_1_reg_2191 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd1))) | ((icmp_ln317_1_reg_2182 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd1))) | ((or_ln312_1_reg_2157 == 1'd1) & (cmp_i_i130_i_reg_2065 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else if (((1'b1 == ap_CS_fsm_state54) & (((((icmp_ln322_1_reg_2191 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd0)) | ((cmp_i_i130_i_reg_2065 == 1'd0) & (grp_fu_617_p2 == 1'd1))) | ((icmp_ln317_1_reg_2182 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd0))) | ((or_ln312_1_reg_2157 == 1'd1) & (cmp_i_i130_i_reg_2065 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((or_ln312_2_fu_1414_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            if (((icmp_ln317_2_fu_1465_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((icmp_ln322_2_fu_1480_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((1'b1 == ap_CS_fsm_state59) & (grp_os_heap_push_fu_586_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((1'b1 == ap_CS_fsm_state60) & ((((((or_ln312_3_fu_1577_p2 == 1'd1) & (icmp_ln322_2_reg_2250 == 1'd0)) | ((or_ln312_3_fu_1577_p2 == 1'd1) & (grp_fu_617_p2 == 1'd1))) | ((or_ln312_3_fu_1577_p2 == 1'd1) & (icmp_ln317_2_reg_2241 == 1'd0))) | ((or_ln312_3_fu_1577_p2 == 1'd1) & (or_ln312_2_reg_2217 == 1'd1))) | ((or_ln312_3_fu_1577_p2 == 1'd1) & (cmp_i_i130_i_reg_2065 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else if (((1'b1 == ap_CS_fsm_state60) & ((((((or_ln312_3_fu_1577_p2 == 1'd0) & (icmp_ln322_2_reg_2250 == 1'd0)) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (grp_fu_617_p2 == 1'd1))) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (icmp_ln317_2_reg_2241 == 1'd0))) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (or_ln312_2_reg_2217 == 1'd1))) | ((or_ln312_3_fu_1577_p2 == 1'd0) & (cmp_i_i130_i_reg_2065 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((icmp_ln317_3_fu_1627_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((icmp_ln322_3_fu_1642_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            if (((1'b1 == ap_CS_fsm_state65) & (grp_os_heap_push_fu_586_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((1'b1 == ap_CS_fsm_state66) & ((icmp_ln292_reg_2056 == 1'd0) | ((or_ln312_3_reg_2274 == 1'd1) | ((icmp_ln317_3_reg_2299 == 1'd0) | ((icmp_ln322_3_reg_2308 == 1'd0) | (grp_fu_617_p2 == 1'd1))))))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state68 : begin
            if (((grp_fu_617_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((1'b1 == MAXI_AWREADY) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == MAXI_WREADY) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == MAXI_BVALID) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign MAXI_WDATA = storemerge12_reg_541;

assign add_ln300_2_fu_1379_p2 = ($signed(sext_ln83_2_fu_1346_p1) + $signed(neighbour_node_g_score_V_reg_2073));

assign add_ln300_4_fu_1540_p2 = ($signed(sext_ln300_3_fu_1536_p1) + $signed(neighbour_node_g_score_V_reg_2073));

assign add_ln300_6_fu_1702_p2 = ($signed(sext_ln300_4_fu_1698_p1) + $signed(neighbour_node_g_score_V_reg_2073));

assign add_ln300_fu_1224_p2 = ($signed(sext_ln83_1_fu_1191_p1) + $signed(neighbour_node_g_score_V_reg_2073));

assign add_ln373_fu_725_p2 = ($signed(zext_ln373_fu_722_p1) + $signed(17'd131070));

assign add_ln380_fu_768_p2 = (zext_ln379_fu_764_p1 + 9'd1);

assign add_ln391_fu_837_p2 = ($signed(zext_ln391_2_fu_833_p1) + $signed(17'd131071));

assign add_ln394_fu_865_p2 = (zext_ln391_fu_855_p1 + 9'd1);

assign add_ln62_1_fu_1279_p2 = (word_idx_2_reg_2166 + 13'd17);

assign add_ln62_2_fu_1439_p2 = (word_idx_3_fu_1429_p4 + 13'd17);

assign add_ln62_3_fu_1602_p2 = (word_idx_4_reg_2283 + 13'd17);

assign add_ln62_fu_1124_p2 = (word_idx_1_reg_2103 + 13'd17);

assign and_ln288_fu_1009_p2 = (icmp_ln870_fu_995_p2 & icmp_ln870_1_fu_1004_p2);

assign and_ln292_fu_1047_p2 = (shl_ln292_fu_1041_p2 & closed_set_q0);

assign and_ln317_1_fu_1298_p2 = (shl_ln317_1_fu_1292_p2 & local_ram_q0);

assign and_ln317_2_fu_1459_p2 = (shl_ln317_2_fu_1453_p2 & local_ram_q0);

assign and_ln317_3_fu_1621_p2 = (shl_ln317_3_fu_1615_p2 & local_ram_q0);

assign and_ln317_fu_1143_p2 = (shl_ln317_fu_1137_p2 & local_ram_q0);

assign and_ln322_1_fu_1314_p2 = (shl_ln317_1_reg_2177 & closed_set_q0);

assign and_ln322_2_fu_1475_p2 = (shl_ln317_2_reg_2236 & closed_set_q0);

assign and_ln322_3_fu_1637_p2 = (shl_ln317_3_reg_2294 & closed_set_q0);

assign and_ln322_fu_1159_p2 = (shl_ln317_reg_2114 & closed_set_q0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == MAXI_RVALID) & (icmp_ln366_reg_1793 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == MAXI_RVALID) & (icmp_ln366_reg_1793 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((1'b0 == MAXI_RVALID) & (icmp_ln366_reg_1793 == 1'd0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1159 = ((icmp_ln280_reg_1989 == 1'd0) & (icmp_ln277_1_reg_1980 == 1'd1) & (icmp_ln266_reg_1976 == 1'd1) & (icmp_ln277_reg_1862 == 1'd0) & (1'd0 == and_ln288_reg_2035));
end

always @ (*) begin
    ap_condition_1166 = ((icmp_ln266_reg_1976 == 1'd0) | ((icmp_ln396_reg_2346 == 1'd0) & (icmp_ln280_reg_1989 == 1'd0) & (icmp_ln277_1_reg_1980 == 1'd1) & (icmp_ln277_reg_1862 == 1'd0) & (1'd1 == and_ln288_reg_2035)));
end

always @ (*) begin
    ap_condition_939 = ((((icmp_ln277_1_reg_1980 == 1'd0) & (icmp_ln266_reg_1976 == 1'd1)) | ((icmp_ln280_reg_1989 == 1'd1) & (icmp_ln266_reg_1976 == 1'd1))) | ((icmp_ln266_reg_1976 == 1'd1) & (icmp_ln277_reg_1862 == 1'd1)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bit_idx_1_fu_1112_p1 = grp_fu_1756_p3[4:0];

assign bit_idx_2_fu_1267_p1 = grp_fu_1764_p3[4:0];

assign bit_idx_3_fu_1425_p1 = idx_3_fu_1420_p2[4:0];

assign bit_idx_4_fu_1588_p1 = idx_4_fu_1583_p2[4:0];

assign bit_idx_fu_1019_p1 = idx_fu_1015_p2[4:0];

assign cmp_i_i124_i_fu_1070_p2 = ((current_y_V_reg_2011 == 9'd0) ? 1'b1 : 1'b0);

assign cmp_i_i130_i_fu_1065_p2 = ((current_x_V_reg_1999 == 9'd0) ? 1'b1 : 1'b0);

assign grp_fu_1743_p0 = zext_ln275_fu_810_p1;

assign grp_fu_1743_p1 = zext_ln275_fu_810_p1;

assign grp_fu_1751_p0 = zext_ln275_reg_1848;

assign grp_fu_1751_p1 = grp_fu_1751_p10;

assign grp_fu_1751_p10 = grp_os_heap_pop_fu_572_ap_return_2;

assign grp_fu_1756_p0 = zext_ln275_reg_1848;

assign grp_fu_1756_p1 = grp_fu_1756_p10;

assign grp_fu_1756_p10 = n_y_V_fu_1080_p2;

assign grp_fu_1756_p2 = zext_ln870_reg_2023;

assign grp_fu_1764_p0 = zext_ln275_reg_1848;

assign grp_fu_1764_p1 = grp_fu_1764_p10;

assign grp_fu_1764_p10 = n_y_V_1_fu_1235_p2;

assign grp_fu_1764_p2 = zext_ln870_reg_2023;

assign grp_fu_1772_p0 = grp_fu_1772_p00;

assign grp_fu_1772_p00 = add_ln394_reg_1885;

assign grp_fu_1772_p1 = 19'd1000;

assign grp_fu_617_p2 = ((error_flag == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_627_p2 = ((open_set_size == 16'd0) ? 1'b1 : 1'b0);

assign grp_fu_633_p2 = ((current_x_V_reg_1999 < trunc_ln3_reg_1838) ? 1'b1 : 1'b0);

assign grp_fu_637_p2 = ((current_x_V_reg_1999 > goal_x_V_reg_1914) ? 1'b1 : 1'b0);

assign grp_fu_641_p2 = ((current_y_V_reg_2011 < trunc_ln3_reg_1838) ? 1'b1 : 1'b0);

assign grp_fu_645_p2 = ((current_y_V_reg_2011 > goal_y_V_reg_1924) ? 1'b1 : 1'b0);

assign grp_os_heap_pop_fu_572_ap_start = grp_os_heap_pop_fu_572_ap_start_reg;

assign grp_os_heap_push_fu_586_ap_start = grp_os_heap_push_fu_586_ap_start_reg;

assign h_start_V_fu_962_p2 = ($signed(sext_ln300_fu_958_p1) + $signed(sext_ln83_fu_924_p1));

assign i_1_fu_675_p2 = (ap_phi_mux_i_phi_fu_412_p4 + 13'd1);

assign i_3_fu_749_p2 = (ap_phi_mux_i_2_phi_fu_424_p4 + 8'd1);

assign i_6_fu_877_p2 = (i_5_reg_455 + 13'd1);

assign i_7_fu_849_p2 = (i_4_reg_444 + 8'd1);

assign icmp_ln257_fu_883_p2 = ((i_5_reg_455 == 13'd7813) ? 1'b1 : 1'b0);

assign icmp_ln277_1_fu_968_p2 = ((iteration_reg_466 < iteration_limit_reg_1857) ? 1'b1 : 1'b0);

assign icmp_ln277_fu_820_p2 = ((grp_fu_1743_p2 == 18'd0) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1053_p2 = ((and_ln292_fu_1047_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_1_fu_1304_p2 = ((and_ln317_1_fu_1298_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_2_fu_1465_p2 = ((and_ln317_2_fu_1459_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_3_fu_1627_p2 = ((and_ln317_3_fu_1621_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_1149_p2 = ((and_ln317_fu_1143_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln322_1_fu_1319_p2 = ((and_ln322_1_fu_1314_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln322_2_fu_1480_p2 = ((and_ln322_2_fu_1475_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln322_3_fu_1642_p2 = ((and_ln322_3_fu_1637_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln322_fu_1164_p2 = ((and_ln322_fu_1159_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln366_fu_681_p2 = ((ap_phi_mux_i_phi_fu_412_p4 == 13'd7830) ? 1'b1 : 1'b0);

assign icmp_ln373_1_fu_717_p2 = ((op2_assign_reg_1807 > 16'd500) ? 1'b1 : 1'b0);

assign icmp_ln373_2_fu_731_p2 = ((add_ln373_fu_725_p2 > 17'd14) ? 1'b1 : 1'b0);

assign icmp_ln373_fu_712_p2 = ((op2_assign_reg_1807 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln379_fu_759_p2 = ((zext_ln379_1_fu_755_p1 < trunc_ln371_reg_1814) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_843_p2 = (($signed(zext_ln391_1_fu_825_p1) < $signed(add_ln391_fu_837_p2)) ? 1'b1 : 1'b0);

assign icmp_ln83_1_fu_928_p2 = ((start_y_V_reg_1907 > goal_y_V_reg_1924) ? 1'b1 : 1'b0);

assign icmp_ln83_3_fu_1195_p2 = ((n_y_V_reg_2082 > goal_y_V_reg_1924) ? 1'b1 : 1'b0);

assign icmp_ln83_5_fu_1350_p2 = ((n_y_V_1_reg_2145 > goal_y_V_reg_1924) ? 1'b1 : 1'b0);

assign icmp_ln83_6_fu_1486_p2 = ((n_x_V_reg_2208 > goal_x_V_reg_1914) ? 1'b1 : 1'b0);

assign icmp_ln83_8_fu_1648_p2 = ((n_x_V_3_reg_2267 > goal_x_V_reg_1914) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_894_p2 = ((start_x_V_reg_1900 > goal_x_V_reg_1914) ? 1'b1 : 1'b0);

assign icmp_ln870_1_fu_1004_p2 = ((grp_os_heap_pop_fu_572_ap_return_2 == goal_y_V_reg_1924) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_995_p2 = ((grp_os_heap_pop_fu_572_ap_return_1 == goal_x_V_reg_1914) ? 1'b1 : 1'b0);

assign icmp_ln882_1_fu_1095_p2 = ((n_y_V_fu_1080_p2 < trunc_ln3_reg_1838) ? 1'b1 : 1'b0);

assign icmp_ln882_3_fu_1250_p2 = ((n_y_V_1_fu_1235_p2 < trunc_ln3_reg_1838) ? 1'b1 : 1'b0);

assign icmp_ln882_4_fu_1398_p2 = ((n_x_V_reg_2208 < trunc_ln3_reg_1838) ? 1'b1 : 1'b0);

assign icmp_ln882_6_fu_1560_p2 = ((n_x_V_3_fu_1551_p2 < trunc_ln3_reg_1838) ? 1'b1 : 1'b0);

assign idx_3_fu_1420_p2 = (mul_ln67_reg_2039 + zext_ln882_2_fu_1395_p1);

assign idx_4_fu_1583_p2 = (mul_ln67_reg_2039 + zext_ln882_3_fu_1556_p1);

assign idx_fu_1015_p2 = (mul_ln67_reg_2039 + zext_ln870_reg_2023);

assign iteration_1_fu_973_p2 = (iteration_reg_466 + 19'd1);

assign iteration_limit_fu_813_p3 = {{grp_fu_1743_p2}, {1'd0}};

assign n_x_V_3_fu_1551_p2 = (current_x_V_reg_1999 + 9'd1);

assign n_x_V_fu_1390_p2 = ($signed(current_x_V_reg_1999) + $signed(9'd511));

assign n_y_V_1_fu_1235_p2 = (current_y_V_reg_2011 + 9'd1);

assign n_y_V_fu_1080_p2 = ($signed(current_y_V_reg_2011) + $signed(9'd511));

assign neighbour_node_f_score_V_1_fu_1384_p2 = ($signed(add_ln300_2_fu_1379_p2) + $signed(sext_ln300_2_fu_1375_p1));

assign neighbour_node_f_score_V_2_fu_1545_p2 = ($signed(add_ln300_4_fu_1540_p2) + $signed(sext_ln83_3_fu_1511_p1));

assign neighbour_node_f_score_V_3_fu_1707_p2 = ($signed(add_ln300_6_fu_1702_p2) + $signed(sext_ln83_4_fu_1673_p1));

assign neighbour_node_f_score_V_fu_1229_p2 = ($signed(add_ln300_fu_1224_p2) + $signed(sext_ln300_1_fu_1220_p1));

assign neighbour_node_g_score_V_fu_1075_p2 = (current_g_score_V_reg_1993 + 11'd1);

assign or_ln312_1_fu_1261_p2 = (xor_ln882_3_fu_1255_p2 | xor_ln882_2_fu_1240_p2);

assign or_ln312_2_fu_1414_p2 = (xor_ln882_5_fu_1408_p2 | xor_ln882_4_fu_1402_p2);

assign or_ln312_3_fu_1577_p2 = (xor_ln882_7_fu_1571_p2 | xor_ln882_6_fu_1565_p2);

assign or_ln312_fu_1106_p2 = (xor_ln882_fu_1085_p2 | xor_ln882_1_fu_1100_p2);

assign or_ln373_1_fu_743_p2 = (or_ln373_fu_737_p2 | icmp_ln373_fu_712_p2);

assign or_ln373_fu_737_p2 = (icmp_ln373_2_fu_731_p2 | icmp_ln373_1_fu_717_p2);

assign or_ln78_fu_1059_p2 = (shl_ln292_fu_1041_p2 | closed_set_q0);

assign select_ln342_fu_1713_p3 = ((grp_fu_627_p2[0:0] == 1'b1) ? 32'd30000 : 32'd40000);

assign select_ln83_1_fu_950_p3 = ((icmp_ln83_1_fu_928_p2[0:0] == 1'b1) ? sub_ln83_2_fu_938_p2 : sub_ln83_3_fu_944_p2);

assign select_ln83_2_fu_1183_p3 = ((grp_fu_637_p2[0:0] == 1'b1) ? sub_ln83_4_fu_1173_p2 : sub_ln83_5_fu_1178_p2);

assign select_ln83_3_fu_1212_p3 = ((icmp_ln83_3_fu_1195_p2[0:0] == 1'b1) ? sub_ln83_6_fu_1202_p2 : sub_ln83_7_fu_1207_p2);

assign select_ln83_4_fu_1338_p3 = ((grp_fu_637_p2[0:0] == 1'b1) ? sub_ln83_8_fu_1328_p2 : sub_ln83_9_fu_1333_p2);

assign select_ln83_5_fu_1367_p3 = ((icmp_ln83_5_fu_1350_p2[0:0] == 1'b1) ? sub_ln83_10_fu_1357_p2 : sub_ln83_11_fu_1362_p2);

assign select_ln83_6_fu_1503_p3 = ((icmp_ln83_6_fu_1486_p2[0:0] == 1'b1) ? sub_ln83_12_fu_1493_p2 : sub_ln83_13_fu_1498_p2);

assign select_ln83_7_fu_1528_p3 = ((grp_fu_645_p2[0:0] == 1'b1) ? sub_ln83_14_fu_1518_p2 : sub_ln83_15_fu_1523_p2);

assign select_ln83_8_fu_1665_p3 = ((icmp_ln83_8_fu_1648_p2[0:0] == 1'b1) ? sub_ln83_16_fu_1655_p2 : sub_ln83_17_fu_1660_p2);

assign select_ln83_9_fu_1690_p3 = ((grp_fu_645_p2[0:0] == 1'b1) ? sub_ln83_18_fu_1680_p2 : sub_ln83_19_fu_1685_p2);

assign select_ln83_fu_916_p3 = ((icmp_ln83_fu_894_p2[0:0] == 1'b1) ? sub_ln83_fu_904_p2 : sub_ln83_1_fu_910_p2);

assign sext_ln300_1_fu_1220_p1 = $signed(select_ln83_3_fu_1212_p3);

assign sext_ln300_2_fu_1375_p1 = $signed(select_ln83_5_fu_1367_p3);

assign sext_ln300_3_fu_1536_p1 = $signed(select_ln83_7_fu_1528_p3);

assign sext_ln300_4_fu_1698_p1 = $signed(select_ln83_9_fu_1690_p3);

assign sext_ln300_fu_958_p1 = $signed(select_ln83_1_fu_950_p3);

assign sext_ln366_fu_665_p1 = $signed(trunc_ln_fu_655_p4);

assign sext_ln83_1_fu_1191_p1 = $signed(select_ln83_2_fu_1183_p3);

assign sext_ln83_2_fu_1346_p1 = $signed(select_ln83_4_fu_1338_p3);

assign sext_ln83_3_fu_1511_p1 = $signed(select_ln83_6_fu_1503_p3);

assign sext_ln83_4_fu_1673_p1 = $signed(select_ln83_8_fu_1665_p3);

assign sext_ln83_fu_924_p1 = $signed(select_ln83_fu_916_p3);

assign shl_ln292_fu_1041_p2 = 32'd1 << zext_ln69_fu_1038_p1;

assign shl_ln317_1_fu_1292_p2 = 32'd1 << zext_ln61_1_fu_1289_p1;

assign shl_ln317_2_fu_1453_p2 = 32'd1 << zext_ln61_2_fu_1450_p1;

assign shl_ln317_3_fu_1615_p2 = 32'd1 << zext_ln61_3_fu_1612_p1;

assign shl_ln317_fu_1137_p2 = 32'd1 << zext_ln61_fu_1134_p1;

assign sub_ln83_10_fu_1357_p2 = (zext_ln83_7_fu_1354_p1 - zext_ln83_3_reg_1954);

assign sub_ln83_11_fu_1362_p2 = (zext_ln83_3_reg_1954 - zext_ln83_7_fu_1354_p1);

assign sub_ln83_12_fu_1493_p2 = (zext_ln83_8_fu_1490_p1 - zext_ln83_1_reg_1942);

assign sub_ln83_13_fu_1498_p2 = (zext_ln83_1_reg_1942 - zext_ln83_8_fu_1490_p1);

assign sub_ln83_14_fu_1518_p2 = (zext_ln83_9_fu_1515_p1 - zext_ln83_3_reg_1954);

assign sub_ln83_15_fu_1523_p2 = (zext_ln83_3_reg_1954 - zext_ln83_9_fu_1515_p1);

assign sub_ln83_16_fu_1655_p2 = (zext_ln83_10_fu_1652_p1 - zext_ln83_1_reg_1942);

assign sub_ln83_17_fu_1660_p2 = (zext_ln83_1_reg_1942 - zext_ln83_10_fu_1652_p1);

assign sub_ln83_18_fu_1680_p2 = (zext_ln83_11_fu_1677_p1 - zext_ln83_3_reg_1954);

assign sub_ln83_19_fu_1685_p2 = (zext_ln83_3_reg_1954 - zext_ln83_11_fu_1677_p1);

assign sub_ln83_1_fu_910_p2 = (zext_ln83_1_fu_901_p1 - zext_ln83_fu_898_p1);

assign sub_ln83_2_fu_938_p2 = (zext_ln83_2_fu_932_p1 - zext_ln83_3_fu_935_p1);

assign sub_ln83_3_fu_944_p2 = (zext_ln83_3_fu_935_p1 - zext_ln83_2_fu_932_p1);

assign sub_ln83_4_fu_1173_p2 = (zext_ln83_4_fu_1170_p1 - zext_ln83_1_reg_1942);

assign sub_ln83_5_fu_1178_p2 = (zext_ln83_1_reg_1942 - zext_ln83_4_fu_1170_p1);

assign sub_ln83_6_fu_1202_p2 = (zext_ln83_5_fu_1199_p1 - zext_ln83_3_reg_1954);

assign sub_ln83_7_fu_1207_p2 = (zext_ln83_3_reg_1954 - zext_ln83_5_fu_1199_p1);

assign sub_ln83_8_fu_1328_p2 = (zext_ln83_6_fu_1325_p1 - zext_ln83_1_reg_1942);

assign sub_ln83_9_fu_1333_p2 = (zext_ln83_1_reg_1942 - zext_ln83_6_fu_1325_p1);

assign sub_ln83_fu_904_p2 = (zext_ln83_fu_898_p1 - zext_ln83_1_fu_901_p1);

assign total_length_1_fu_1727_p2 = (zext_ln396_fu_1724_p1 + total_length_reg_432);

assign trunc_ln371_fu_702_p1 = local_ram_q0[15:0];

assign trunc_ln_fu_655_p4 = {{ram[63:2]}};

assign waypoints_x_V_address1 = zext_ln394_fu_859_p1;

assign waypoints_x_V_d0 = {{local_ram_q0[24:16]}};

assign waypoints_y_V_address1 = zext_ln394_fu_859_p1;

assign waypoints_y_V_d0 = local_ram_q0[8:0];

assign word_idx_3_fu_1429_p4 = {{idx_3_fu_1420_p2[17:5]}};

assign word_idx_fu_1023_p4 = {{idx_fu_1015_p2[17:5]}};

assign xor_ln882_1_fu_1100_p2 = (icmp_ln882_1_fu_1095_p2 ^ 1'd1);

assign xor_ln882_2_fu_1240_p2 = (grp_fu_633_p2 ^ 1'd1);

assign xor_ln882_3_fu_1255_p2 = (icmp_ln882_3_fu_1250_p2 ^ 1'd1);

assign xor_ln882_4_fu_1402_p2 = (icmp_ln882_4_fu_1398_p2 ^ 1'd1);

assign xor_ln882_5_fu_1408_p2 = (grp_fu_641_p2 ^ 1'd1);

assign xor_ln882_6_fu_1565_p2 = (icmp_ln882_6_fu_1560_p2 ^ 1'd1);

assign xor_ln882_7_fu_1571_p2 = (grp_fu_641_p2 ^ 1'd1);

assign xor_ln882_fu_1085_p2 = (grp_fu_633_p2 ^ 1'd1);

assign zext_ln258_fu_889_p1 = i_5_reg_455;

assign zext_ln275_fu_810_p1 = op2_assign_reg_1807;

assign zext_ln367_fu_687_p1 = i_reg_408_pp0_iter1_reg;

assign zext_ln373_fu_722_p1 = trunc_ln371_reg_1814;

assign zext_ln379_1_fu_755_p1 = ap_phi_mux_i_2_phi_fu_424_p4;

assign zext_ln379_fu_764_p1 = ap_phi_mux_i_2_phi_fu_424_p4;

assign zext_ln380_fu_774_p1 = add_ln380_fu_768_p2;

assign zext_ln381_fu_790_p1 = i_2_reg_420;

assign zext_ln391_1_fu_825_p1 = i_4_reg_444;

assign zext_ln391_2_fu_833_p1 = waypoint_count;

assign zext_ln391_fu_855_p1 = i_4_reg_444;

assign zext_ln394_1_fu_871_p1 = add_ln394_fu_865_p2;

assign zext_ln394_fu_859_p1 = i_4_reg_444;

assign zext_ln396_fu_1724_p1 = current_g_score_V_reg_1993;

assign zext_ln61_1_fu_1289_p1 = bit_idx_2_reg_2161;

assign zext_ln61_2_fu_1450_p1 = bit_idx_3_reg_2221;

assign zext_ln61_3_fu_1612_p1 = bit_idx_4_reg_2278;

assign zext_ln61_fu_1134_p1 = bit_idx_1_reg_2098;

assign zext_ln62_1_fu_1284_p1 = add_ln62_1_fu_1279_p2;

assign zext_ln62_2_fu_1445_p1 = add_ln62_2_fu_1439_p2;

assign zext_ln62_3_fu_1607_p1 = add_ln62_3_fu_1602_p2;

assign zext_ln62_fu_1129_p1 = add_ln62_fu_1124_p2;

assign zext_ln69_fu_1038_p1 = bit_idx_reg_2046;

assign zext_ln70_1_fu_1155_p1 = word_idx_1_reg_2103;

assign zext_ln70_2_fu_1310_p1 = word_idx_2_reg_2166;

assign zext_ln70_3_fu_1471_p1 = word_idx_3_reg_2226;

assign zext_ln70_4_fu_1633_p1 = word_idx_4_reg_2283;

assign zext_ln70_fu_1033_p1 = word_idx_fu_1023_p4;

assign zext_ln83_10_fu_1652_p1 = n_x_V_3_reg_2267;

assign zext_ln83_11_fu_1677_p1 = current_y_V_reg_2011;

assign zext_ln83_1_fu_901_p1 = goal_x_V_reg_1914;

assign zext_ln83_2_fu_932_p1 = start_y_V_reg_1907;

assign zext_ln83_3_fu_935_p1 = goal_y_V_reg_1924;

assign zext_ln83_4_fu_1170_p1 = current_x_V_reg_1999;

assign zext_ln83_5_fu_1199_p1 = n_y_V_reg_2082;

assign zext_ln83_6_fu_1325_p1 = current_x_V_reg_1999;

assign zext_ln83_7_fu_1354_p1 = n_y_V_1_reg_2145;

assign zext_ln83_8_fu_1490_p1 = n_x_V_reg_2208;

assign zext_ln83_9_fu_1515_p1 = current_y_V_reg_2011;

assign zext_ln83_fu_898_p1 = start_x_V_reg_1900;

assign zext_ln870_fu_991_p1 = grp_os_heap_pop_fu_572_ap_return_1;

assign zext_ln882_2_fu_1395_p1 = n_x_V_reg_2208;

assign zext_ln882_3_fu_1556_p1 = n_x_V_3_fu_1551_p2;

always @ (posedge ap_clk) begin
    zext_ln275_reg_1848[17:16] <= 2'b00;
    iteration_limit_reg_1857[0] <= 1'b0;
    zext_ln83_1_reg_1942[9] <= 1'b0;
    zext_ln83_3_reg_1954[9] <= 1'b0;
    zext_ln870_reg_2023[17:9] <= 9'b000000000;
end

endmodule //toplevel

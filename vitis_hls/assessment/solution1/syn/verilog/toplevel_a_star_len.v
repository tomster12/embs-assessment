// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toplevel_a_star_len (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        start_x,
        start_y,
        goal_x,
        goal_y,
        error_flag_i,
        error_flag_o,
        error_flag_o_ap_vld,
        world_size,
        local_ram_address0,
        local_ram_ce0,
        local_ram_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_pp3_stage0 = 40'd1073741824;
parameter    ap_ST_fsm_pp3_stage1 = 40'd2147483648;
parameter    ap_ST_fsm_pp3_stage2 = 40'd4294967296;
parameter    ap_ST_fsm_pp3_stage3 = 40'd8589934592;
parameter    ap_ST_fsm_state36 = 40'd17179869184;
parameter    ap_ST_fsm_state37 = 40'd34359738368;
parameter    ap_ST_fsm_state38 = 40'd68719476736;
parameter    ap_ST_fsm_state39 = 40'd137438953472;
parameter    ap_ST_fsm_state40 = 40'd274877906944;
parameter    ap_ST_fsm_state41 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] start_x;
input  [15:0] start_y;
input  [15:0] goal_x;
input  [15:0] goal_y;
input  [31:0] error_flag_i;
output  [31:0] error_flag_o;
output   error_flag_o_ap_vld;
input  [31:0] world_size;
output  [12:0] local_ram_address0;
output   local_ram_ce0;
input  [31:0] local_ram_q0;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] error_flag_o;
reg error_flag_o_ap_vld;
reg local_ram_ce0;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [12:0] closed_set_address0;
reg    closed_set_ce0;
reg    closed_set_we0;
reg   [31:0] closed_set_d0;
wire   [31:0] closed_set_q0;
reg   [12:0] open_set_heap_f_score_address0;
reg    open_set_heap_f_score_ce0;
reg    open_set_heap_f_score_we0;
reg   [15:0] open_set_heap_f_score_d0;
wire   [15:0] open_set_heap_f_score_q0;
reg   [12:0] open_set_heap_f_score_address1;
reg    open_set_heap_f_score_ce1;
reg    open_set_heap_f_score_we1;
reg   [15:0] open_set_heap_f_score_d1;
wire   [15:0] open_set_heap_f_score_q1;
reg   [12:0] open_set_heap_g_score_address0;
reg    open_set_heap_g_score_ce0;
reg    open_set_heap_g_score_we0;
reg   [15:0] open_set_heap_g_score_d0;
wire   [15:0] open_set_heap_g_score_q0;
reg   [12:0] open_set_heap_g_score_address1;
reg    open_set_heap_g_score_ce1;
reg    open_set_heap_g_score_we1;
reg   [15:0] open_set_heap_g_score_d1;
wire   [15:0] open_set_heap_g_score_q1;
reg   [12:0] open_set_heap_x_address0;
reg    open_set_heap_x_ce0;
reg    open_set_heap_x_we0;
reg   [15:0] open_set_heap_x_d0;
wire   [15:0] open_set_heap_x_q0;
reg   [12:0] open_set_heap_x_address1;
reg    open_set_heap_x_ce1;
reg    open_set_heap_x_we1;
reg   [15:0] open_set_heap_x_d1;
wire   [15:0] open_set_heap_x_q1;
reg   [12:0] open_set_heap_y_address0;
reg    open_set_heap_y_ce0;
reg    open_set_heap_y_we0;
reg   [15:0] open_set_heap_y_d0;
wire   [15:0] open_set_heap_y_q0;
reg   [12:0] open_set_heap_y_address1;
reg    open_set_heap_y_ce1;
reg    open_set_heap_y_we1;
reg   [15:0] open_set_heap_y_d1;
wire   [15:0] open_set_heap_y_q1;
reg   [15:0] idx_assign_2_reg_618;
reg   [15:0] reg_690;
wire    ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state33_pp3_stage2_iter0;
wire    ap_block_pp3_stage2_11001;
reg   [0:0] icmp_ln107_reg_1772;
wire    ap_CS_fsm_state39;
reg   [0:0] icmp_ln93_reg_1595;
reg   [0:0] icmp_ln93_1_reg_1609;
reg   [0:0] icmp_ln92_reg_1577;
reg   [0:0] icmp_ln92_1_reg_1591;
reg   [15:0] reg_695;
wire    ap_CS_fsm_pp3_stage3;
wire    ap_block_state34_pp3_stage3_iter0;
wire    ap_block_pp3_stage3_11001;
reg   [0:0] icmp_ln112_reg_1816;
reg   [15:0] reg_701;
reg   [15:0] reg_707;
wire   [12:0] empty_30_fu_713_p2;
wire    ap_CS_fsm_state2;
wire   [13:0] empty_33_fu_730_p2;
wire    ap_CS_fsm_state4;
wire   [15:0] h_start_fu_790_p2;
reg   [15:0] h_start_reg_1477;
wire    ap_CS_fsm_state5;
wire  signed [17:0] trunc_ln52_fu_816_p1;
reg  signed [17:0] trunc_ln52_reg_1488;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln165_fu_800_p2;
wire   [31:0] iteration_limit_fu_820_p2;
reg   [31:0] iteration_limit_reg_1494;
wire    ap_CS_fsm_state7;
wire   [0:0] cmp8_fu_826_p2;
reg   [0:0] cmp8_reg_1499;
wire    ap_CS_fsm_state8;
wire   [31:0] iteration_count_1_fu_831_p2;
reg   [31:0] iteration_count_1_reg_1504;
wire   [31:0] add_ln144_fu_848_p2;
reg   [31:0] add_ln144_reg_1512;
wire    ap_CS_fsm_state9;
wire   [0:0] and_ln170_fu_843_p2;
reg   [15:0] open_set_heap_g_score_load_reg_1543;
wire    ap_CS_fsm_state10;
reg   [15:0] current_y_reg_1549;
reg   [15:0] current_x_reg_1557;
wire   [15:0] left_fu_900_p2;
reg   [15:0] left_reg_1565;
wire    ap_CS_fsm_state11;
wire   [15:0] right_fu_906_p2;
reg   [15:0] right_reg_1570;
wire   [0:0] icmp_ln92_fu_916_p2;
wire   [0:0] icmp_ln92_1_fu_931_p2;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln93_fu_940_p2;
wire   [0:0] grp_fu_684_p2;
wire    ap_CS_fsm_state13;
wire   [12:0] trunc_ln93_fu_954_p1;
reg   [12:0] trunc_ln93_reg_1613;
wire   [17:0] zext_ln176_fu_958_p1;
reg   [17:0] zext_ln176_reg_1618;
wire    ap_CS_fsm_state14;
wire   [0:0] and_ln176_fu_969_p2;
wire   [4:0] bit_idx_fu_978_p1;
reg   [4:0] bit_idx_reg_1631;
wire    ap_CS_fsm_state17;
reg   [12:0] closed_set_addr_1_reg_1636;
wire   [31:0] or_ln64_fu_1016_p2;
reg   [31:0] or_ln64_reg_1644;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln179_fu_1010_p2;
wire   [0:0] cmp29_fu_1022_p2;
reg   [0:0] cmp29_reg_1649;
wire    ap_CS_fsm_state19;
wire   [0:0] cmp33_fu_1027_p2;
reg   [0:0] cmp33_reg_1654;
wire   [15:0] n_g_score_tentative_fu_1032_p2;
reg   [15:0] n_g_score_tentative_reg_1659;
wire   [2:0] add_ln187_fu_1045_p2;
reg   [2:0] add_ln187_reg_1668;
wire    ap_CS_fsm_state20;
wire   [15:0] n_x_fu_1109_p2;
reg   [15:0] n_x_reg_1679;
wire   [0:0] tmp_fu_1037_p3;
wire   [0:0] and_ln190_1_fu_1057_p2;
wire   [0:0] and_ln190_fu_1086_p2;
wire   [15:0] n_y_fu_1118_p2;
reg   [15:0] n_y_reg_1688;
wire   [0:0] icmp_ln193_fu_1127_p2;
reg   [0:0] icmp_ln193_reg_1697;
wire   [0:0] icmp_ln193_1_fu_1136_p2;
reg   [0:0] icmp_ln193_1_reg_1702;
wire   [17:0] zext_ln193_2_fu_1141_p1;
reg   [17:0] zext_ln193_2_reg_1707;
wire    ap_CS_fsm_state21;
wire   [0:0] or_ln193_fu_1154_p2;
wire   [4:0] bit_idx_1_fu_1163_p1;
reg   [4:0] bit_idx_1_reg_1720;
wire    ap_CS_fsm_state24;
reg   [12:0] word_idx_1_reg_1725;
wire    ap_CS_fsm_state25;
wire   [31:0] shl_ln194_fu_1188_p2;
reg   [31:0] shl_ln194_reg_1736;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln194_fu_1200_p2;
reg   [0:0] icmp_ln194_reg_1741;
wire    ap_CS_fsm_state27;
wire   [0:0] icmp_ln195_fu_1215_p2;
reg   [0:0] icmp_ln195_reg_1750;
wire    ap_CS_fsm_state28;
wire   [15:0] n_f_score_fu_1266_p2;
reg   [15:0] n_f_score_reg_1754;
wire    ap_CS_fsm_state29;
wire   [31:0] add_ln133_fu_1302_p2;
reg   [31:0] add_ln133_reg_1762;
wire    ap_CS_fsm_state30;
wire   [15:0] zext_ln134_fu_1312_p1;
wire   [0:0] icmp_ln107_fu_1316_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state31_pp3_stage0_iter0;
wire    ap_block_state35_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [16:0] zext_ln111_fu_1322_p1;
reg   [16:0] zext_ln111_reg_1776;
reg   [15:0] trunc_ln111_1_reg_1781;
wire   [15:0] parent_fu_1370_p3;
reg   [15:0] parent_reg_1786;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state32_pp3_stage1_iter0;
wire    ap_block_pp3_stage1_11001;
wire   [63:0] zext_ln112_fu_1378_p1;
reg   [63:0] zext_ln112_reg_1791;
reg   [12:0] open_set_heap_f_score_addr_9_reg_1798;
wire   [63:0] zext_ln112_1_fu_1383_p1;
reg   [63:0] zext_ln112_1_reg_1804;
reg   [12:0] open_set_heap_f_score_addr_10_reg_1811;
reg   [12:0] open_set_heap_g_score_addr_5_reg_1820;
reg   [12:0] open_set_heap_x_addr_5_reg_1826;
reg   [12:0] open_set_heap_y_addr_5_reg_1832;
wire   [14:0] smallest_1_fu_1388_p1;
reg   [14:0] smallest_1_reg_1838;
wire    ap_CS_fsm_state38;
reg   [12:0] open_set_heap_f_score_addr_6_reg_1843;
reg   [12:0] open_set_heap_g_score_addr_2_reg_1848;
reg   [12:0] open_set_heap_x_addr_2_reg_1853;
reg   [12:0] open_set_heap_y_addr_2_reg_1858;
wire    ap_block_pp3_stage2_subdone;
reg    ap_predicate_tran33to36_state33;
reg    ap_condition_pp3_exit_iter0_state33;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage3_subdone;
reg   [12:0] empty_reg_528;
wire   [0:0] exitcond7016_fu_719_p2;
reg   [13:0] empty_32_reg_539;
wire   [0:0] exitcond15_fu_736_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] ap_phi_mux_empty_37_phi_fu_611_p4;
reg   [31:0] empty_35_reg_550;
reg   [31:0] iteration_count_reg_562;
reg   [31:0] empty_36_reg_574;
reg   [14:0] smallest_reg_584;
wire    ap_CS_fsm_state40;
reg   [2:0] i_reg_596;
wire    ap_CS_fsm_state37;
reg   [31:0] empty_37_reg_607;
reg   [15:0] ap_phi_mux_idx_assign_2_phi_fu_621_p4;
wire    ap_block_pp3_stage0;
reg   [31:0] empty_39_reg_628;
wire    ap_CS_fsm_state36;
reg   [15:0] smallest_in_in_reg_652;
reg   [15:0] retval_0_reg_661;
wire   [0:0] icmp_ln213_fu_862_p2;
wire   [0:0] icmp_ln126_fu_1282_p2;
wire   [63:0] p_cast_fu_725_p1;
wire   [63:0] p_cast3_fu_742_p1;
wire   [63:0] zext_ln144_fu_854_p1;
wire   [63:0] zext_ln92_1_fu_921_p1;
wire   [63:0] zext_ln92_2_fu_926_p1;
wire   [63:0] zext_ln93_1_fu_945_p1;
wire   [63:0] zext_ln93_2_fu_949_p1;
wire   [63:0] zext_ln55_fu_990_p1;
wire   [63:0] zext_ln46_fu_1180_p1;
wire   [63:0] zext_ln55_1_fu_1206_p1;
wire   [63:0] zext_ln132_fu_1294_p1;
wire    ap_block_pp3_stage1;
wire    ap_block_pp3_stage2;
wire    ap_block_pp3_stage3;
wire   [63:0] zext_ln98_fu_1392_p1;
wire   [63:0] zext_ln87_fu_1400_p1;
wire   [31:0] add_ln214_fu_880_p2;
wire   [0:0] icmp_ln70_fu_750_p2;
wire   [15:0] sub_ln70_fu_754_p2;
wire   [15:0] sub_ln70_1_fu_758_p2;
wire   [0:0] icmp_ln70_1_fu_770_p2;
wire   [15:0] sub_ln70_2_fu_774_p2;
wire   [15:0] sub_ln70_3_fu_778_p2;
wire   [15:0] select_ln70_1_fu_782_p3;
wire   [15:0] select_ln70_fu_762_p3;
wire  signed [31:0] trunc_ln52_fu_816_p0;
wire   [31:0] grp_fu_810_p2;
wire   [0:0] icmp_ln170_fu_837_p2;
wire   [15:0] shl_ln_fu_892_p3;
wire   [31:0] zext_ln92_fu_912_p1;
wire   [31:0] zext_ln93_fu_937_p1;
wire   [0:0] icmp_ln176_fu_961_p2;
wire   [0:0] icmp_ln176_1_fu_965_p2;
wire  signed [17:0] grp_fu_1407_p3;
wire   [12:0] word_idx_fu_981_p4;
wire   [31:0] zext_ln54_fu_995_p1;
wire   [31:0] shl_ln179_fu_998_p2;
wire   [31:0] and_ln179_fu_1004_p2;
wire   [0:0] icmp_ln190_fu_1051_p2;
wire   [1:0] trunc_ln190_fu_1062_p1;
wire   [0:0] icmp_ln190_1_fu_1080_p2;
wire   [31:0] tmp_2_fu_1091_p6;
wire   [15:0] trunc_ln191_fu_1105_p1;
wire   [31:0] tmp_1_fu_1066_p6;
wire   [15:0] trunc_ln192_fu_1114_p1;
wire   [31:0] zext_ln193_fu_1123_p1;
wire  signed [31:0] icmp_ln193_fu_1127_p1;
wire   [31:0] zext_ln193_1_fu_1132_p1;
wire  signed [31:0] icmp_ln193_1_fu_1136_p1;
wire   [0:0] xor_ln193_fu_1144_p2;
wire   [0:0] xor_ln193_1_fu_1149_p2;
wire  signed [17:0] grp_fu_1415_p3;
wire   [12:0] add_ln46_fu_1175_p2;
wire   [31:0] zext_ln45_fu_1185_p1;
wire   [31:0] and_ln194_fu_1194_p2;
wire   [31:0] and_ln195_fu_1210_p2;
wire   [0:0] icmp_ln70_2_fu_1221_p2;
wire   [15:0] sub_ln70_4_fu_1225_p2;
wire   [15:0] sub_ln70_5_fu_1229_p2;
wire   [0:0] icmp_ln70_3_fu_1241_p2;
wire   [15:0] sub_ln70_6_fu_1245_p2;
wire   [15:0] sub_ln70_7_fu_1249_p2;
wire   [15:0] select_ln70_2_fu_1233_p3;
wire   [15:0] add_ln201_fu_1261_p2;
wire   [15:0] select_ln70_3_fu_1253_p3;
wire   [18:0] tmp_3_fu_1272_p4;
wire   [12:0] trunc_ln134_fu_1308_p1;
wire   [16:0] sub_ln111_fu_1326_p2;
wire   [16:0] add_ln111_fu_1342_p2;
wire   [0:0] tmp_4_fu_1347_p3;
wire   [15:0] sub_ln111_1_fu_1355_p2;
wire   [15:0] trunc_ln111_2_fu_1360_p4;
wire   [15:0] grp_fu_1407_p1;
wire   [15:0] grp_fu_1407_p2;
wire    ap_CS_fsm_state16;
wire   [15:0] grp_fu_1415_p1;
wire   [15:0] grp_fu_1415_p2;
wire    ap_CS_fsm_state23;
reg   [15:0] ap_return_preg;
wire    ap_CS_fsm_state41;
reg   [39:0] ap_NS_fsm;
wire    ap_block_pp3_stage0_subdone;
wire    ap_block_pp3_stage1_subdone;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [17:0] grp_fu_1407_p10;
wire   [17:0] grp_fu_1415_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_return_preg = 16'd0;
end

toplevel_a_star_len_closed_set #(
    .DataWidth( 32 ),
    .AddressRange( 7813 ),
    .AddressWidth( 13 ))
closed_set_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(closed_set_address0),
    .ce0(closed_set_ce0),
    .we0(closed_set_we0),
    .d0(closed_set_d0),
    .q0(closed_set_q0)
);

toplevel_a_star_len_open_set_heap_f_score #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
open_set_heap_f_score_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(open_set_heap_f_score_address0),
    .ce0(open_set_heap_f_score_ce0),
    .we0(open_set_heap_f_score_we0),
    .d0(open_set_heap_f_score_d0),
    .q0(open_set_heap_f_score_q0),
    .address1(open_set_heap_f_score_address1),
    .ce1(open_set_heap_f_score_ce1),
    .we1(open_set_heap_f_score_we1),
    .d1(open_set_heap_f_score_d1),
    .q1(open_set_heap_f_score_q1)
);

toplevel_a_star_len_open_set_heap_f_score #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
open_set_heap_g_score_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(open_set_heap_g_score_address0),
    .ce0(open_set_heap_g_score_ce0),
    .we0(open_set_heap_g_score_we0),
    .d0(open_set_heap_g_score_d0),
    .q0(open_set_heap_g_score_q0),
    .address1(open_set_heap_g_score_address1),
    .ce1(open_set_heap_g_score_ce1),
    .we1(open_set_heap_g_score_we1),
    .d1(open_set_heap_g_score_d1),
    .q1(open_set_heap_g_score_q1)
);

toplevel_a_star_len_open_set_heap_f_score #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
open_set_heap_x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(open_set_heap_x_address0),
    .ce0(open_set_heap_x_ce0),
    .we0(open_set_heap_x_we0),
    .d0(open_set_heap_x_d0),
    .q0(open_set_heap_x_q0),
    .address1(open_set_heap_x_address1),
    .ce1(open_set_heap_x_ce1),
    .we1(open_set_heap_x_we1),
    .d1(open_set_heap_x_d1),
    .q1(open_set_heap_x_q1)
);

toplevel_a_star_len_open_set_heap_f_score #(
    .DataWidth( 16 ),
    .AddressRange( 8192 ),
    .AddressWidth( 13 ))
open_set_heap_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(open_set_heap_y_address0),
    .ce0(open_set_heap_y_ce0),
    .we0(open_set_heap_y_we0),
    .d0(open_set_heap_y_d0),
    .q0(open_set_heap_y_q0),
    .address1(open_set_heap_y_address1),
    .ce1(open_set_heap_y_ce1),
    .we1(open_set_heap_y_we1),
    .d1(open_set_heap_y_d1),
    .q1(open_set_heap_y_q1)
);

toplevel_mul_32s_32s_32_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_2_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(world_size),
    .din1(world_size),
    .ce(1'b1),
    .dout(grp_fu_810_p2)
);

toplevel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U2(
    .din0(32'd4294967295),
    .din1(32'd1),
    .din2(32'd0),
    .din3(32'd0),
    .din4(trunc_ln190_fu_1062_p1),
    .dout(tmp_1_fu_1066_p6)
);

toplevel_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U3(
    .din0(32'd0),
    .din1(32'd0),
    .din2(32'd4294967295),
    .din3(32'd1),
    .din4(trunc_ln190_fu_1062_p1),
    .dout(tmp_2_fu_1091_p6)
);

toplevel_mac_muladd_18s_16ns_16ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 18 ))
mac_muladd_18s_16ns_16ns_18_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln52_reg_1488),
    .din1(grp_fu_1407_p1),
    .din2(grp_fu_1407_p2),
    .ce(1'b1),
    .dout(grp_fu_1407_p3)
);

toplevel_mac_muladd_18s_16ns_16ns_18_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 18 ))
mac_muladd_18s_16ns_16ns_18_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln52_reg_1488),
    .din1(grp_fu_1415_p1),
    .din2(grp_fu_1415_p2),
    .ce(1'b1),
    .dout(grp_fu_1415_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_subdone) & (ap_enable_reg_pp3_iter0 == 1'b0)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_return_preg <= retval_0_reg_661;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        empty_32_reg_539 <= 14'd0;
    end else if (((exitcond15_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        empty_32_reg_539 <= empty_33_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        empty_35_reg_550 <= 32'd1;
    end else if (((tmp_fu_1037_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        empty_35_reg_550 <= empty_37_reg_607;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln179_fu_1010_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        empty_36_reg_574 <= add_ln144_reg_1512;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        empty_36_reg_574 <= empty_35_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        empty_37_reg_607 <= empty_39_reg_628;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        empty_37_reg_607 <= add_ln144_reg_1512;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln195_reg_1750 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln194_reg_1741 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((or_ln193_fu_1154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)))) begin
        empty_39_reg_628 <= empty_37_reg_607;
    end else if ((((tmp_fu_1037_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln190_1_fu_1057_p2)) | ((tmp_fu_1037_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd1 == and_ln190_fu_1086_p2) & (1'd0 == and_ln190_1_fu_1057_p2)))) begin
        empty_39_reg_628 <= ap_phi_mux_empty_37_phi_fu_611_p4;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        empty_39_reg_628 <= add_ln133_reg_1762;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7016_fu_719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_528 <= empty_30_fu_713_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_528 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        i_reg_596 <= add_ln187_reg_1668;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        i_reg_596 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        idx_assign_2_reg_618 <= parent_reg_1786;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        idx_assign_2_reg_618 <= zext_ln134_fu_1312_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        iteration_count_reg_562 <= 32'd0;
    end else if (((tmp_fu_1037_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        iteration_count_reg_562 <= iteration_count_1_reg_1504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln176_fu_969_p2))) begin
        retval_0_reg_661 <= open_set_heap_g_score_load_reg_1543;
    end else if ((((icmp_ln165_fu_800_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((icmp_ln126_fu_1282_p2 == 1'd0) & (icmp_ln195_reg_1750 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln213_fu_862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2)) | ((icmp_ln213_fu_862_p2 == 1'd0) & (cmp8_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2)) | ((icmp_ln213_fu_862_p2 == 1'd0) & (cmp8_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2)))) begin
        retval_0_reg_661 <= 16'd65535;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((grp_fu_684_p2 == 1'd1) & (icmp_ln92_1_reg_1591 == 1'd0) & (icmp_ln93_reg_1595 == 1'd1)) | ((grp_fu_684_p2 == 1'd1) & (icmp_ln92_reg_1577 == 1'd0) & (icmp_ln93_reg_1595 == 1'd1))))) begin
        smallest_in_in_reg_652 <= right_reg_1570;
    end else if (((icmp_ln92_1_fu_931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12) & (icmp_ln92_reg_1577 == 1'd1))) begin
        smallest_in_in_reg_652 <= left_reg_1565;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1))))) begin
        smallest_reg_584 <= smallest_1_reg_1838;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        smallest_reg_584 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln133_reg_1762 <= add_ln133_fu_1302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'd1 == and_ln170_fu_843_p2))) begin
        add_ln144_reg_1512 <= add_ln144_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln187_reg_1668 <= add_ln187_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        bit_idx_1_reg_1720 <= bit_idx_1_fu_1163_p1;
        word_idx_1_reg_1725 <= {{grp_fu_1415_p3[17:5]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        bit_idx_reg_1631 <= bit_idx_fu_978_p1;
        closed_set_addr_1_reg_1636 <= zext_ln55_fu_990_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        cmp29_reg_1649 <= cmp29_fu_1022_p2;
        cmp33_reg_1654 <= cmp33_fu_1027_p2;
        n_g_score_tentative_reg_1659 <= n_g_score_tentative_fu_1032_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        cmp8_reg_1499 <= cmp8_fu_826_p2;
        iteration_count_1_reg_1504 <= iteration_count_1_fu_831_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        current_x_reg_1557 <= open_set_heap_x_q1;
        current_y_reg_1549 <= open_set_heap_y_q1;
        open_set_heap_g_score_load_reg_1543 <= open_set_heap_g_score_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        h_start_reg_1477 <= h_start_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln107_reg_1772 <= icmp_ln107_fu_1316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage2) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        icmp_ln112_reg_1816 <= grp_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_1037_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd0 == and_ln190_fu_1086_p2) & (1'd0 == and_ln190_1_fu_1057_p2))) begin
        icmp_ln193_1_reg_1702 <= icmp_ln193_1_fu_1136_p2;
        icmp_ln193_reg_1697 <= icmp_ln193_fu_1127_p2;
        n_x_reg_1679 <= n_x_fu_1109_p2;
        n_y_reg_1688 <= n_y_fu_1118_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        icmp_ln194_reg_1741 <= icmp_ln194_fu_1200_p2;
        shl_ln194_reg_1736 <= shl_ln194_fu_1188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        icmp_ln195_reg_1750 <= icmp_ln195_fu_1215_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln92_reg_1577 == 1'd1))) begin
        icmp_ln92_1_reg_1591 <= icmp_ln92_1_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln92_reg_1577 <= icmp_ln92_fu_916_p2;
        left_reg_1565[15 : 1] <= left_fu_900_p2[15 : 1];
        right_reg_1570[15 : 1] <= right_fu_906_p2[15 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((icmp_ln92_1_reg_1591 == 1'd0) & (icmp_ln93_reg_1595 == 1'd1)) | ((icmp_ln92_reg_1577 == 1'd0) & (icmp_ln93_reg_1595 == 1'd1))))) begin
        icmp_ln93_1_reg_1609 <= grp_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & ((icmp_ln92_1_fu_931_p2 == 1'd0) | (icmp_ln92_reg_1577 == 1'd0)))) begin
        icmp_ln93_reg_1595 <= icmp_ln93_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        iteration_limit_reg_1494[31 : 1] <= iteration_limit_fu_820_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln195_reg_1750 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        n_f_score_reg_1754 <= n_f_score_fu_1266_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001))) begin
        open_set_heap_f_score_addr_10_reg_1811 <= zext_ln112_1_fu_1383_p1;
        open_set_heap_f_score_addr_9_reg_1798 <= zext_ln112_fu_1378_p1;
        zext_ln112_1_reg_1804[15 : 0] <= zext_ln112_1_fu_1383_p1[15 : 0];
        zext_ln112_reg_1791[15 : 0] <= zext_ln112_fu_1378_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1))))) begin
        open_set_heap_f_score_addr_6_reg_1843 <= zext_ln98_fu_1392_p1;
        open_set_heap_g_score_addr_2_reg_1848 <= zext_ln98_fu_1392_p1;
        open_set_heap_x_addr_2_reg_1853 <= zext_ln98_fu_1392_p1;
        open_set_heap_y_addr_2_reg_1858 <= zext_ln98_fu_1392_p1;
        smallest_1_reg_1838 <= smallest_1_fu_1388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_684_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage2) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage2_11001))) begin
        open_set_heap_g_score_addr_5_reg_1820 <= zext_ln112_1_reg_1804;
        open_set_heap_x_addr_5_reg_1826 <= zext_ln112_1_reg_1804;
        open_set_heap_y_addr_5_reg_1832 <= zext_ln112_1_reg_1804;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln179_fu_1010_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        or_ln64_reg_1644 <= or_ln64_fu_1016_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage1_11001) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        parent_reg_1786 <= parent_fu_1370_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state39) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        reg_690 <= open_set_heap_f_score_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage3) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        reg_695 <= open_set_heap_g_score_q1;
        reg_701 <= open_set_heap_x_q1;
        reg_707 <= open_set_heap_y_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_1316_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        trunc_ln111_1_reg_1781 <= {{sub_ln111_fu_1326_p2[16:1]}};
        zext_ln111_reg_1776[15 : 0] <= zext_ln111_fu_1322_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_fu_800_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        trunc_ln52_reg_1488 <= trunc_ln52_fu_816_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((grp_fu_684_p2 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)) | ((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1))))) begin
        trunc_ln93_reg_1613 <= trunc_ln93_fu_954_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        zext_ln176_reg_1618[15 : 0] <= zext_ln176_fu_958_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        zext_ln193_2_reg_1707[15 : 0] <= zext_ln193_2_fu_1141_p1[15 : 0];
    end
end

always @ (*) begin
    if ((ap_predicate_tran33to36_state33 == 1'b1)) begin
        ap_condition_pp3_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_idx_assign_2_phi_fu_621_p4 = parent_reg_1786;
    end else begin
        ap_phi_mux_idx_assign_2_phi_fu_621_p4 = idx_assign_2_reg_618;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        ap_return = retval_0_reg_661;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        closed_set_address0 = zext_ln55_1_fu_1206_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        closed_set_address0 = closed_set_addr_1_reg_1636;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        closed_set_address0 = zext_ln55_fu_990_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        closed_set_address0 = p_cast_fu_725_p1;
    end else begin
        closed_set_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state2))) begin
        closed_set_ce0 = 1'b1;
    end else begin
        closed_set_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        closed_set_d0 = or_ln64_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        closed_set_d0 = 32'd0;
    end else begin
        closed_set_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((exitcond7016_fu_719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        closed_set_we0 = 1'b1;
    end else begin
        closed_set_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln213_fu_862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2))) begin
        error_flag_o = add_ln214_fu_880_p2;
    end else if (((icmp_ln213_fu_862_p2 == 1'd0) & (cmp8_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2))) begin
        error_flag_o = 32'd500;
    end else if (((icmp_ln213_fu_862_p2 == 1'd0) & (cmp8_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2))) begin
        error_flag_o = 32'd400;
    end else if (((icmp_ln126_fu_1282_p2 == 1'd0) & (icmp_ln195_reg_1750 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        error_flag_o = 32'd200;
    end else begin
        error_flag_o = error_flag_i;
    end
end

always @ (*) begin
    if ((((icmp_ln126_fu_1282_p2 == 1'd0) & (icmp_ln195_reg_1750 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((icmp_ln213_fu_862_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2)) | ((icmp_ln213_fu_862_p2 == 1'd0) & (cmp8_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2)) | ((icmp_ln213_fu_862_p2 == 1'd0) & (cmp8_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2)))) begin
        error_flag_o_ap_vld = 1'b1;
    end else begin
        error_flag_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        local_ram_ce0 = 1'b1;
    end else begin
        local_ram_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        open_set_heap_f_score_address0 = zext_ln87_fu_1400_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_f_score_address0 = zext_ln112_fu_1378_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        open_set_heap_f_score_address0 = zext_ln93_1_fu_945_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        open_set_heap_f_score_address0 = zext_ln92_2_fu_926_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        open_set_heap_f_score_address0 = zext_ln144_fu_854_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6))) begin
        open_set_heap_f_score_address0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_f_score_address0 = p_cast3_fu_742_p1;
    end else begin
        open_set_heap_f_score_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_f_score_address1 = open_set_heap_f_score_addr_6_reg_1843;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        open_set_heap_f_score_address1 = zext_ln98_fu_1392_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_f_score_address1 = open_set_heap_f_score_addr_10_reg_1811;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_f_score_address1 = open_set_heap_f_score_addr_9_reg_1798;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_f_score_address1 = zext_ln112_1_fu_1383_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_address1 = zext_ln132_fu_1294_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        open_set_heap_f_score_address1 = zext_ln93_2_fu_949_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        open_set_heap_f_score_address1 = zext_ln92_1_fu_921_p1;
    end else begin
        open_set_heap_f_score_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_f_score_ce0 = 1'b1;
    end else begin
        open_set_heap_f_score_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_f_score_ce1 = 1'b1;
    end else begin
        open_set_heap_f_score_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        open_set_heap_f_score_d0 = open_set_heap_f_score_q1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        open_set_heap_f_score_d0 = open_set_heap_f_score_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        open_set_heap_f_score_d0 = h_start_reg_1477;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_f_score_d0 = 16'd0;
    end else begin
        open_set_heap_f_score_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_f_score_d1 = reg_690;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_f_score_d1 = n_f_score_reg_1754;
    end else begin
        open_set_heap_f_score_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | ((exitcond15_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_state39) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_f_score_we0 = 1'b1;
    end else begin
        open_set_heap_f_score_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_state40) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_f_score_we1 = 1'b1;
    end else begin
        open_set_heap_f_score_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        open_set_heap_g_score_address0 = zext_ln87_fu_1400_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_g_score_address0 = open_set_heap_g_score_addr_5_reg_1820;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_g_score_address0 = zext_ln112_reg_1791;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        open_set_heap_g_score_address0 = zext_ln144_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        open_set_heap_g_score_address0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_g_score_address0 = p_cast3_fu_742_p1;
    end else begin
        open_set_heap_g_score_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_g_score_address1 = open_set_heap_g_score_addr_2_reg_1848;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        open_set_heap_g_score_address1 = zext_ln98_fu_1392_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_g_score_address1 = zext_ln112_1_reg_1804;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_address1 = zext_ln132_fu_1294_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        open_set_heap_g_score_address1 = 13'd0;
    end else begin
        open_set_heap_g_score_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state39) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_g_score_ce0 = 1'b1;
    end else begin
        open_set_heap_g_score_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_g_score_ce1 = 1'b1;
    end else begin
        open_set_heap_g_score_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_g_score_d0 = reg_695;
    end else if (((1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_g_score_d0 = open_set_heap_g_score_q1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        open_set_heap_g_score_d0 = 16'd0;
    end else begin
        open_set_heap_g_score_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_g_score_d1 = reg_695;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_g_score_d1 = n_g_score_tentative_reg_1659;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        open_set_heap_g_score_d1 = open_set_heap_g_score_q0;
    end else begin
        open_set_heap_g_score_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((exitcond15_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_g_score_we0 = 1'b1;
    end else begin
        open_set_heap_g_score_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state40) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_g_score_we1 = 1'b1;
    end else begin
        open_set_heap_g_score_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        open_set_heap_x_address0 = zext_ln87_fu_1400_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_x_address0 = open_set_heap_x_addr_5_reg_1826;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_x_address0 = zext_ln112_reg_1791;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        open_set_heap_x_address0 = zext_ln144_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        open_set_heap_x_address0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_x_address0 = p_cast3_fu_742_p1;
    end else begin
        open_set_heap_x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_x_address1 = open_set_heap_x_addr_2_reg_1853;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        open_set_heap_x_address1 = zext_ln98_fu_1392_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_x_address1 = zext_ln112_1_reg_1804;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_address1 = zext_ln132_fu_1294_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        open_set_heap_x_address1 = 13'd0;
    end else begin
        open_set_heap_x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state39) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_x_ce0 = 1'b1;
    end else begin
        open_set_heap_x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_x_ce1 = 1'b1;
    end else begin
        open_set_heap_x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_x_d0 = reg_701;
    end else if (((1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_x_d0 = open_set_heap_x_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        open_set_heap_x_d0 = start_x;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_x_d0 = 16'd0;
    end else begin
        open_set_heap_x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_x_d1 = reg_701;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_x_d1 = n_x_reg_1679;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        open_set_heap_x_d1 = open_set_heap_x_q0;
    end else begin
        open_set_heap_x_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((exitcond15_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_x_we0 = 1'b1;
    end else begin
        open_set_heap_x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state40) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_x_we1 = 1'b1;
    end else begin
        open_set_heap_x_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        open_set_heap_y_address0 = zext_ln87_fu_1400_p1;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_y_address0 = open_set_heap_y_addr_5_reg_1832;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_y_address0 = zext_ln112_reg_1791;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        open_set_heap_y_address0 = zext_ln144_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        open_set_heap_y_address0 = 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_y_address0 = p_cast3_fu_742_p1;
    end else begin
        open_set_heap_y_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_y_address1 = open_set_heap_y_addr_2_reg_1858;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        open_set_heap_y_address1 = zext_ln98_fu_1392_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        open_set_heap_y_address1 = zext_ln112_1_reg_1804;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_address1 = zext_ln132_fu_1294_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        open_set_heap_y_address1 = 13'd0;
    end else begin
        open_set_heap_y_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state39) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_y_ce0 = 1'b1;
    end else begin
        open_set_heap_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_pp3_stage2) & (1'b0 == ap_block_pp3_stage2_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_y_ce1 = 1'b1;
    end else begin
        open_set_heap_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        open_set_heap_y_d0 = reg_707;
    end else if (((1'b1 == ap_CS_fsm_state39) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (1'b0 == ap_block_pp3_stage3) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
        open_set_heap_y_d0 = open_set_heap_y_q1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        open_set_heap_y_d0 = start_y;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        open_set_heap_y_d0 = 16'd0;
    end else begin
        open_set_heap_y_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        open_set_heap_y_d1 = reg_707;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        open_set_heap_y_d1 = n_y_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        open_set_heap_y_d1 = open_set_heap_y_q0;
    end else begin
        open_set_heap_y_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((exitcond15_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'b1 == ap_CS_fsm_pp3_stage3) & (icmp_ln112_reg_1816 == 1'd1) & (icmp_ln107_reg_1772 == 1'd0) & (1'b0 == ap_block_pp3_stage3_11001) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_y_we0 = 1'b1;
    end else begin
        open_set_heap_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state40) & (((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1)) | ((icmp_ln93_1_reg_1609 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)))))) begin
        open_set_heap_y_we1 = 1'b1;
    end else begin
        open_set_heap_y_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond7016_fu_719_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond15_fu_736_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln165_fu_800_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'd0 == and_ln170_fu_843_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (((grp_fu_684_p2 == 1'd1) & (icmp_ln93_reg_1595 == 1'd1)) | ((icmp_ln92_1_reg_1591 == 1'd1) & (icmp_ln92_reg_1577 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'd1 == and_ln176_fu_969_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln179_fu_1010_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_fu_1037_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((tmp_fu_1037_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state20) & (1'd0 == and_ln190_fu_1086_p2) & (1'd0 == and_ln190_1_fu_1057_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((or_ln193_fu_1154_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln194_reg_1741 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln126_fu_1282_p2 == 1'd0) & (icmp_ln195_reg_1750 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else if (((icmp_ln126_fu_1282_p2 == 1'd1) & (icmp_ln195_reg_1750 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((~((ap_predicate_tran33to36_state33 == 1'b1) & (1'b0 == ap_block_pp3_stage2_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end else if (((ap_predicate_tran33to36_state33 == 1'b1) & (1'b0 == ap_block_pp3_stage2_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_pp3_stage3 : begin
            if ((1'b0 == ap_block_pp3_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage3;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_fu_1342_p2 = ($signed(zext_ln111_reg_1776) + $signed(17'd131071));

assign add_ln133_fu_1302_p2 = (empty_37_reg_607 + 32'd1);

assign add_ln144_fu_848_p2 = ($signed(empty_36_reg_574) + $signed(32'd4294967295));

assign add_ln187_fu_1045_p2 = (i_reg_596 + 3'd1);

assign add_ln201_fu_1261_p2 = (n_g_score_tentative_reg_1659 + select_ln70_2_fu_1233_p3);

assign add_ln214_fu_880_p2 = (iteration_count_reg_562 + 32'd300);

assign add_ln46_fu_1175_p2 = (word_idx_1_reg_1725 + 13'd14);

assign and_ln170_fu_843_p2 = (icmp_ln170_fu_837_p2 & cmp8_reg_1499);

assign and_ln176_fu_969_p2 = (icmp_ln176_fu_961_p2 & icmp_ln176_1_fu_965_p2);

assign and_ln179_fu_1004_p2 = (shl_ln179_fu_998_p2 & closed_set_q0);

assign and_ln190_1_fu_1057_p2 = (icmp_ln190_fu_1051_p2 & cmp29_reg_1649);

assign and_ln190_fu_1086_p2 = (icmp_ln190_1_fu_1080_p2 & cmp33_reg_1654);

assign and_ln194_fu_1194_p2 = (shl_ln194_fu_1188_p2 & local_ram_q0);

assign and_ln195_fu_1210_p2 = (shl_ln194_reg_1736 & closed_set_q0);

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_mux_empty_37_phi_fu_611_p4 = empty_37_reg_607;

always @ (*) begin
    ap_predicate_tran33to36_state33 = ((grp_fu_684_p2 == 1'd0) | (icmp_ln107_reg_1772 == 1'd1));
end

assign bit_idx_1_fu_1163_p1 = grp_fu_1415_p3[4:0];

assign bit_idx_fu_978_p1 = grp_fu_1407_p3[4:0];

assign cmp29_fu_1022_p2 = ((current_x_reg_1557 == 16'd0) ? 1'b1 : 1'b0);

assign cmp33_fu_1027_p2 = ((current_y_reg_1549 == 16'd0) ? 1'b1 : 1'b0);

assign cmp8_fu_826_p2 = ((iteration_count_reg_562 < iteration_limit_reg_1494) ? 1'b1 : 1'b0);

assign empty_30_fu_713_p2 = (empty_reg_528 + 13'd1);

assign empty_33_fu_730_p2 = (empty_32_reg_539 + 14'd1);

assign exitcond15_fu_736_p2 = ((empty_32_reg_539 == 14'd8192) ? 1'b1 : 1'b0);

assign exitcond7016_fu_719_p2 = ((empty_reg_528 == 13'd7813) ? 1'b1 : 1'b0);

assign grp_fu_1407_p1 = grp_fu_1407_p10;

assign grp_fu_1407_p10 = current_y_reg_1549;

assign grp_fu_1407_p2 = zext_ln176_reg_1618;

assign grp_fu_1415_p1 = grp_fu_1415_p10;

assign grp_fu_1415_p10 = n_y_reg_1688;

assign grp_fu_1415_p2 = zext_ln193_2_reg_1707;

assign grp_fu_684_p2 = ((open_set_heap_f_score_q0 < open_set_heap_f_score_q1) ? 1'b1 : 1'b0);

assign h_start_fu_790_p2 = (select_ln70_1_fu_782_p3 + select_ln70_fu_762_p3);

assign icmp_ln107_fu_1316_p2 = ((ap_phi_mux_idx_assign_2_phi_fu_621_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_1282_p2 = ((tmp_3_fu_1272_p4 == 19'd0) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_800_p2 = ((error_flag_i == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_837_p2 = ((empty_36_reg_574 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln176_1_fu_965_p2 = ((current_y_reg_1549 == goal_y) ? 1'b1 : 1'b0);

assign icmp_ln176_fu_961_p2 = ((current_x_reg_1557 == goal_x) ? 1'b1 : 1'b0);

assign icmp_ln179_fu_1010_p2 = ((and_ln179_fu_1004_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln190_1_fu_1080_p2 = ((i_reg_596 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln190_fu_1051_p2 = ((i_reg_596 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln193_1_fu_1136_p1 = world_size;

assign icmp_ln193_1_fu_1136_p2 = ((zext_ln193_1_fu_1132_p1 < icmp_ln193_1_fu_1136_p1) ? 1'b1 : 1'b0);

assign icmp_ln193_fu_1127_p1 = world_size;

assign icmp_ln193_fu_1127_p2 = ((zext_ln193_fu_1123_p1 < icmp_ln193_fu_1127_p1) ? 1'b1 : 1'b0);

assign icmp_ln194_fu_1200_p2 = ((and_ln194_fu_1194_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_1215_p2 = ((and_ln195_fu_1210_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_862_p2 = ((empty_36_reg_574 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln70_1_fu_770_p2 = ((start_y > goal_y) ? 1'b1 : 1'b0);

assign icmp_ln70_2_fu_1221_p2 = ((n_x_reg_1679 > goal_x) ? 1'b1 : 1'b0);

assign icmp_ln70_3_fu_1241_p2 = ((n_y_reg_1688 > goal_y) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_750_p2 = ((start_x > goal_x) ? 1'b1 : 1'b0);

assign icmp_ln92_1_fu_931_p2 = ((open_set_heap_f_score_q1 < open_set_heap_f_score_q0) ? 1'b1 : 1'b0);

assign icmp_ln92_fu_916_p2 = ((zext_ln92_fu_912_p1 < add_ln144_reg_1512) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_940_p2 = ((zext_ln93_fu_937_p1 < add_ln144_reg_1512) ? 1'b1 : 1'b0);

assign iteration_count_1_fu_831_p2 = (iteration_count_reg_562 + 32'd1);

assign iteration_limit_fu_820_p2 = grp_fu_810_p2 << 32'd1;

assign left_fu_900_p2 = (shl_ln_fu_892_p3 | 16'd1);

assign local_ram_address0 = zext_ln46_fu_1180_p1;

assign n_f_score_fu_1266_p2 = (add_ln201_fu_1261_p2 + select_ln70_3_fu_1253_p3);

assign n_g_score_tentative_fu_1032_p2 = (open_set_heap_g_score_load_reg_1543 + 16'd1);

assign n_x_fu_1109_p2 = (current_x_reg_1557 + trunc_ln191_fu_1105_p1);

assign n_y_fu_1118_p2 = (current_y_reg_1549 + trunc_ln192_fu_1114_p1);

assign or_ln193_fu_1154_p2 = (xor_ln193_fu_1144_p2 | xor_ln193_1_fu_1149_p2);

assign or_ln64_fu_1016_p2 = (shl_ln179_fu_998_p2 | closed_set_q0);

assign p_cast3_fu_742_p1 = empty_32_reg_539;

assign p_cast_fu_725_p1 = empty_reg_528;

assign parent_fu_1370_p3 = ((tmp_4_fu_1347_p3[0:0] == 1'b1) ? sub_ln111_1_fu_1355_p2 : trunc_ln111_2_fu_1360_p4);

assign right_fu_906_p2 = (shl_ln_fu_892_p3 + 16'd2);

assign select_ln70_1_fu_782_p3 = ((icmp_ln70_1_fu_770_p2[0:0] == 1'b1) ? sub_ln70_2_fu_774_p2 : sub_ln70_3_fu_778_p2);

assign select_ln70_2_fu_1233_p3 = ((icmp_ln70_2_fu_1221_p2[0:0] == 1'b1) ? sub_ln70_4_fu_1225_p2 : sub_ln70_5_fu_1229_p2);

assign select_ln70_3_fu_1253_p3 = ((icmp_ln70_3_fu_1241_p2[0:0] == 1'b1) ? sub_ln70_6_fu_1245_p2 : sub_ln70_7_fu_1249_p2);

assign select_ln70_fu_762_p3 = ((icmp_ln70_fu_750_p2[0:0] == 1'b1) ? sub_ln70_fu_754_p2 : sub_ln70_1_fu_758_p2);

assign shl_ln179_fu_998_p2 = 32'd1 << zext_ln54_fu_995_p1;

assign shl_ln194_fu_1188_p2 = 32'd1 << zext_ln45_fu_1185_p1;

assign shl_ln_fu_892_p3 = {{smallest_reg_584}, {1'd0}};

assign smallest_1_fu_1388_p1 = smallest_in_in_reg_652[14:0];

assign sub_ln111_1_fu_1355_p2 = (16'd0 - trunc_ln111_1_reg_1781);

assign sub_ln111_fu_1326_p2 = (17'd1 - zext_ln111_fu_1322_p1);

assign sub_ln70_1_fu_758_p2 = (goal_x - start_x);

assign sub_ln70_2_fu_774_p2 = (start_y - goal_y);

assign sub_ln70_3_fu_778_p2 = (goal_y - start_y);

assign sub_ln70_4_fu_1225_p2 = (n_x_reg_1679 - goal_x);

assign sub_ln70_5_fu_1229_p2 = (goal_x - n_x_reg_1679);

assign sub_ln70_6_fu_1245_p2 = (n_y_reg_1688 - goal_y);

assign sub_ln70_7_fu_1249_p2 = (goal_y - n_y_reg_1688);

assign sub_ln70_fu_754_p2 = (start_x - goal_x);

assign tmp_3_fu_1272_p4 = {{empty_37_reg_607[31:13]}};

assign tmp_4_fu_1347_p3 = add_ln111_fu_1342_p2[32'd16];

assign tmp_fu_1037_p3 = i_reg_596[32'd2];

assign trunc_ln111_2_fu_1360_p4 = {{add_ln111_fu_1342_p2[16:1]}};

assign trunc_ln134_fu_1308_p1 = empty_37_reg_607[12:0];

assign trunc_ln190_fu_1062_p1 = i_reg_596[1:0];

assign trunc_ln191_fu_1105_p1 = tmp_2_fu_1091_p6[15:0];

assign trunc_ln192_fu_1114_p1 = tmp_1_fu_1066_p6[15:0];

assign trunc_ln52_fu_816_p0 = world_size;

assign trunc_ln52_fu_816_p1 = trunc_ln52_fu_816_p0[17:0];

assign trunc_ln93_fu_954_p1 = smallest_reg_584[12:0];

assign word_idx_fu_981_p4 = {{grp_fu_1407_p3[17:5]}};

assign xor_ln193_1_fu_1149_p2 = (icmp_ln193_1_reg_1702 ^ 1'd1);

assign xor_ln193_fu_1144_p2 = (icmp_ln193_reg_1697 ^ 1'd1);

assign zext_ln111_fu_1322_p1 = ap_phi_mux_idx_assign_2_phi_fu_621_p4;

assign zext_ln112_1_fu_1383_p1 = parent_fu_1370_p3;

assign zext_ln112_fu_1378_p1 = idx_assign_2_reg_618;

assign zext_ln132_fu_1294_p1 = empty_37_reg_607;

assign zext_ln134_fu_1312_p1 = trunc_ln134_fu_1308_p1;

assign zext_ln144_fu_854_p1 = add_ln144_fu_848_p2;

assign zext_ln176_fu_958_p1 = current_x_reg_1557;

assign zext_ln193_1_fu_1132_p1 = n_y_fu_1118_p2;

assign zext_ln193_2_fu_1141_p1 = n_x_reg_1679;

assign zext_ln193_fu_1123_p1 = n_x_fu_1109_p2;

assign zext_ln45_fu_1185_p1 = bit_idx_1_reg_1720;

assign zext_ln46_fu_1180_p1 = add_ln46_fu_1175_p2;

assign zext_ln54_fu_995_p1 = bit_idx_reg_1631;

assign zext_ln55_1_fu_1206_p1 = word_idx_1_reg_1725;

assign zext_ln55_fu_990_p1 = word_idx_fu_981_p4;

assign zext_ln87_fu_1400_p1 = trunc_ln93_reg_1613;

assign zext_ln92_1_fu_921_p1 = left_fu_900_p2;

assign zext_ln92_2_fu_926_p1 = smallest_reg_584;

assign zext_ln92_fu_912_p1 = left_fu_900_p2;

assign zext_ln93_1_fu_945_p1 = right_reg_1570;

assign zext_ln93_2_fu_949_p1 = smallest_reg_584;

assign zext_ln93_fu_937_p1 = right_reg_1570;

assign zext_ln98_fu_1392_p1 = smallest_1_fu_1388_p1;

always @ (posedge ap_clk) begin
    iteration_limit_reg_1494[0] <= 1'b0;
    left_reg_1565[0] <= 1'b1;
    right_reg_1570[0] <= 1'b0;
    zext_ln176_reg_1618[17:16] <= 2'b00;
    zext_ln193_2_reg_1707[17:16] <= 2'b00;
    zext_ln111_reg_1776[16] <= 1'b0;
    zext_ln112_reg_1791[63:16] <= 48'b000000000000000000000000000000000000000000000000;
    zext_ln112_1_reg_1804[63:16] <= 48'b000000000000000000000000000000000000000000000000;
end

endmodule //toplevel_a_star_len
